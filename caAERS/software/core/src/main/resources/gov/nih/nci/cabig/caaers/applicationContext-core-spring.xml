<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<bean id="applicationDirectoryName" class="java.lang.String" autowire-candidate="false" >
		<constructor-arg value="caaers"/>
	</bean>
	
	<bean  id="caaersDatasourceFactoryBean" class="gov.nih.nci.cabig.caaers.tools.CaaersDataSourcePropertiesFactoryBean">
                <property name="databaseConfigurationName"><value>@databaseConfigurationName@</value></property>
                <property name="applicationDirectoryName" ref="applicationDirectoryName"/>
    </bean>
    <bean id="mainPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="false">
        <property name="properties" ref="caaersDatasourceFactoryBean" />
        <!-- have to use a separate prefix/suffix to avoid maven filtering in everything at build time -->
        <property name="placeholderPrefix"><value>s[</value></property>
        <property name="placeholderSuffix"><value>]</value></property>
        <property name="ignoreResourceNotFound"><value>true</value></property>
        <property name="ignoreUnresolvablePlaceholders"><value>true</value></property>
    </bean>
    
    <bean id="authenticationMode" class="java.lang.String">
        <constructor-arg value="s[authenticationMode]"/>
    </bean>
	<bean id="coppaCache" class="java.lang.Boolean">
		<constructor-arg value="s[enable.coppa.cache]"/>
	</bean>
	<bean id="coppaMode" class="java.lang.Boolean">
		<constructor-arg value="s[enable.coppa.mode]"/>
	</bean>
	<bean id="coppaModeForAutoCompleters" class="java.lang.Boolean">
		<constructor-arg value="s[enable.coppa.mode.autocompleters]"/>
	</bean>	
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>

    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.util.Date">
                    <bean class="org.springframework.beans.propertyeditors.CustomDateEditor">
                        <constructor-arg index="0">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg index="0"><value>yyyy-MM-dd HH:mm:ss.S</value></constructor-arg>
                            </bean>
                        </constructor-arg>
                        <constructor-arg index="1"><value>false</value></constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basenames">
	    	<list>
                <value>/WEB-INF/help</value>
                <value>/WEB-INF/label</value>
                <value>/WEB-INF/error_messages</value>
                <value>/WEB-INF/service-messages</value>
                <value>classpath:service-messages</value>
                <value>service-messages</value>
	    	</list>
	    </property>
  </bean>

  <!-- Overwrite the default Spring Event multicaster -->
  <bean id="eventMulticasterFactoryBean" class="gov.nih.nci.cabig.caaers.tools.spring.EventMulticasterFactoryBean">
    <property name="simpleApplicationEventMulticaster" ref="applicationEventMulticaster" />
    <property name="taskExecutor">
       <bean class="org.springframework.scheduling.timer.TimerTaskExecutor"/>  
    </property>
  </bean>
  
  <bean id="applicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster" />
    
  <bean id="eventFactory" class="gov.nih.nci.cabig.caaers.event.EventFactory" />  
    
</beans>
