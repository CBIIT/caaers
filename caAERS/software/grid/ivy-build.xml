<project name="caaers-grid" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="parent.dir" value="${basedir}/.." />
	<property file="${parent.dir}/build.properties" />
	<property file="build.properties" />
	<property name="wsrf" value="wsrf"/>
	<property name="wsrf-caaers" value="wsrf-caaers"/>
	<property name="ccts.grid-services.working.location" value="${build.dir}/working"/>
	<!--Working tomcat folder or file name 	-->
	<property name="ccts.grid-services.working.tomcat.file" value="apache-tomcat-6.0.20"/>
	<!--Working globus folder or file name-->
	<property name="ccts.grid-services.working.globus.file" value="ws-core-4.0.3"/>
	
	<property name="aees.nes.service.dir" value="${basedir}/introduce/AdverseEventEnterpriseService"/>
	<property name="sres.nes.service.dir" value="${basedir}/introduce/SafetyReportingEnterpriseService"/>
	
	
	<import file="${parent.dir}/common.xml"/>
		
	<target name="init" depends="common.init">	
		<mkdir dir="${ccts.grid-services.working.location}"/>
	</target>
	
	<target name="publish-local"
            depends="common.clean-dist,init,common.resolve,download-tomcat,download-globus,deploy-globus,deploy-grid-services,war"/>

	<!-- ==============================================================
		target: resolve-dist , resolves all core and dependent jars ..
	================================================================== -->
	 <target name="resolve-dist" depends="load-ivy"
	    	description="--> resolve and retrieve dist conf dependencies with ivy">
	    	<echo message="Executing ${ant.project.name} : resolve-dist " />
	 		<ivy:resolve file="ivy.xml" haltonfailure="false" settingsRef="caaers.ivy.instance" conf="distGrid"/>
	 		<ivy:retrieve pattern="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF/lib/[artifact]-[revision].[ext]"  haltonfailure="false" settingsRef="caaers.ivy.instance" conf="distGrid"/>
	  </target>
	
	<!-- ==============================================================
		target: build-grid-services , compiles and builds all grid services ..
	================================================================== -->	
	<target name="build-grid-services">		
		<!-- First build CTMS grid services -->
		<antcall target="build-ccts-grid-services" inheritAll="true" inheritRefs="true"/>
		
		<!-- Then build caAERS's own NES grid services -->
		<!--
		<antcall target="build-sres-service" inheritAll="true" inheritRefs="true"/>
		<antcall target="build-aees-service" inheritAll="true" inheritRefs="true"/>
		-->
	</target>
	
	<target name="build-sres-service" unless="skip.sres">
		<echo message="Building Safety Reporting Enterprise Service located in ${sres.nes.service.dir}, build file is ${sres.nes.service.dir}/build.xml" />
		<subant target="all">
			<fileset dir="${sres.nes.service.dir}" includes="build.xml"/>
		</subant>
		<copy todir="${lib.dir}">
			<fileset dir="${sres.nes.service.dir}/build/lib" includes="*.jar"/>
		</copy>	
		<property name="sres.nes.service.built" value="true"/>		
	</target>
	
	<target name="build-aees-service" unless="aees.nes.service.built">
		<echo message="Building Adverse Event Enterprise Service located in ${aees.nes.service.dir}, build file is ${aees.nes.service.dir}/build.xml" />
		<subant target="all">
			<fileset dir="${aees.nes.service.dir}" includes="build.xml"/>
		</subant>
		<copy todir="${lib.dir}">
			<fileset dir="${aees.nes.service.dir}/build/lib" includes="*.jar"/>
		</copy>	
		<property name="aees.nes.service.built" value="true"/>		
	</target>
	
	<target name="build-ccts-grid-services" unless="skip.ccts.build">
		<subant target="all">
			<fileset dir="${ccts.grid-services.location}" includes="${registration.consumer.grid.service.dir}/build.xml"/>
		</subant>
		<subant target="all">
			<fileset dir="${ccts.grid-services.location}" includes="${study.consumer.grid.service.dir}/build.xml"/>
		</subant>
		<subant target="all">
			<fileset dir="${ccts.grid-services.location}" includes="${lab.consumer.grid.service.dir}/build.xml"/>
		</subant>		
    </target>

	<!-- ==============================================================
		target: deploy-grid-services , deploys all grid services to working tomcat location ..
	================================================================== -->	
	<target name="deploy-grid-services" >	
		<property name="wsrf-root" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}"/>
        <echo message="${ccts.grid-services.location}"/>
        <echo message="${registration.consumer.grid.service.dir}"/>
        <echo message="${ccts.grid-services.working.location}"/>
        <echo message="${ccts.grid-services.working.tomcat.file}"/>
		<subant target="deployTomcat">
			<property name="globus.webapp" value="${wsrf}"/>
			<property name="tomcat.dir" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}"/>
			<fileset dir="${ccts.grid-services.location}" includes="${registration.consumer.grid.service.dir}/ivy-build.xml"/>
		</subant>
           <echo message="done reg" />
		<subant target="deployTomcat">
			<property name="globus.webapp" value="${wsrf}"/>
			<property name="tomcat.dir" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}"/>
			<fileset dir="${ccts.grid-services.location}" includes="${study.consumer.grid.service.dir}/ivy-build.xml"/>
		</subant>	
		<subant target="deployTomcat">
			<property name="globus.webapp" value="${wsrf}"/>
			<property name="tomcat.dir" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}"/>
			<fileset dir="${ccts.grid-services.location}" includes="${lab.consumer.grid.service.dir}/ivy-build.xml"/>
		</subant>
		<!--
		<subant target="deployTomcat">
				<property name="globus.webapp" value="${wsrf}"/>
				<property name="tomcat.dir" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}"/>
				<fileset dir="${aees.nes.service.dir}" includes="build.xml"/>
		</subant>	
		<subant target="deployTomcat">
				<property name="globus.webapp" value="${wsrf}"/>
				<property name="tomcat.dir" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}"/>
				<fileset dir="${sres.nes.service.dir}" includes="build.xml"/>
		</subant>
		-->
		<copy todir="${wsrf-root}/WEB-INF/lib" verbose="true">
	        <fileset dir="${parent.dir}/grid/registration-consumer/build/dist" includes="caaers-registration-consumer.jar"/>
			<fileset dir="${parent.dir}/grid/study-consumer/build/dist" includes="caaers-study-consumer.jar"/>
			<fileset dir="${parent.dir}/grid/lab-consumer/build/dist" includes="caaers-lab-consumer.jar"/>
			<!--
			<fileset dir="${parent.dir}/grid/ess-ae/build/dist" includes="caaers-ess-ae.jar"/>
			<fileset dir="${parent.dir}/grid/ess-sr/build/dist" includes="caaers-ess-sr.jar"/>
			-->
	    </copy> 
		
		<antcall target="resolve-dist" />
		<antcall target="update-wsdd" />
	</target>

	
	<!-- ==============================================================
		target: update-wsdd , updates server-config.wsdd with audit info
	================================================================== -->	
	<target name="update-wsdd">
			<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="main.classpath"/>
	        <xmltask source="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF/etc/cagrid_RegistrationConsumer/server-config.wsdd"
	                 dest="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF/etc/cagrid_RegistrationConsumer/server-config.wsdd"
	                 failWithoutMatch="true">
	            
				<insert path="/:deployment/:service" position="before">
	                <![CDATA[
    			<handler name="auditInfoRequestHandler" type="java:gov.nih.nci.cabig.caaers.grid.AuditInfoRequestHandler" xmlns="http://xml.apache.org/axis/wsdd/"/>
  
				<handler name="auditInfoResponseHandler" type="java:gov.nih.nci.cabig.caaers.grid.AuditInfoResponseHandler" xmlns="http://xml.apache.org/axis/wsdd/"/> 
	      				]]>
	            </insert>
	
			    <insert path="/:deployment/:service" position="under">
			        <![CDATA[
			 	<requestFlow xmlns="http://xml.apache.org/axis/wsdd/">
			        <handler type="auditInfoRequestHandler" />
			    </requestFlow>
			    <responseFlow xmlns="http://xml.apache.org/axis/wsdd/">
			        <handler type="auditInfoResponseHandler"/>
			    </responseFlow>
							]]>
			    </insert>
		  </xmltask>
	
		    <xmltask source="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF/etc/cagrid_StudyConsumer/server-config.wsdd"
		             dest="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF/etc/cagrid_StudyConsumer/server-config.wsdd"
		             failWithoutMatch="true">
		        
				<insert path="/:deployment/:service" position="before">
		            <![CDATA[
				<handler name="auditInfoRequestHandler" type="java:gov.nih.nci.cabig.caaers.grid.AuditInfoRequestHandler" xmlns="http://xml.apache.org/axis/wsdd/"/>
		
				<handler name="auditInfoResponseHandler" type="java:gov.nih.nci.cabig.caaers.grid.AuditInfoResponseHandler" xmlns="http://xml.apache.org/axis/wsdd/"/> 
		  				]]>
		        </insert>
		
			    <insert path="/:deployment/:service" position="under">
			        <![CDATA[
			 	<requestFlow xmlns="http://xml.apache.org/axis/wsdd/">
			        <handler type="auditInfoRequestHandler" />
			    </requestFlow>
			    <responseFlow xmlns="http://xml.apache.org/axis/wsdd/">
			        <handler type="auditInfoResponseHandler"/>
			    </responseFlow>
							]]>
			    </insert>
		  </xmltask>
		  
	</target>

	<!-- ==============================================================
		target: war , make the deployed wsrf web application which has all grid services 
	================================================================== -->	
	 <target name="war" depends="remove-conflict-artifacts">
	    <delete file="${dist.dir}/${wsrf-caaers}.war" />
		<!-- copy the log4j.xml, to the folder to WAR -->
		<copy file="${basedir}/log4j.xml" todir="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF" />
	 	<copy file="${basedir}/log4j.xml" todir="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}/WEB-INF/classes" />
	 	<war destfile="${dist.dir}/${wsrf-caaers}.war"
			basedir="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}" 
			webxml="${basedir}/web.xml"/>
	</target>
	
	
	<available file="${ivy.jar.dir}/${ccts.grid-services.working.tomcat.file}.zip" property="tomcat.tools.exists" />
	<available file="${ivy.jar.dir}/${ccts.grid-services.working.globus.file}.zip" property="globus.tools.exists" />

	<!-- ==============================================================
		target: download tomcat to working directory
	================================================================== -->	
	<target name="download-tomcat" unless="tomcat.tools.exists"  description="Downloads TOMCAT from binary repository and verifies checksum">
	 	<get src="${tomcat.src.url}" dest="${ivy.jar.dir}/${ccts.grid-services.working.tomcat.file}.zip" />
	</target>
	
	<!-- ==============================================================
		target: download globus to working directory
	================================================================== -->	
	<target name="download-globus" unless="globus.tools.exists"  description="Downloads GLOBUS">
		<get src="${globus.src.url}" dest="${ivy.jar.dir}/${ccts.grid-services.working.globus.file}.zip" />
	</target>
	
	<!-- ==============================================================
		target: deploy the downloaded globus to working tomcat 
	================================================================== -->	
	<target name="deploy-globus">
        <unzip src="${ivy.jar.dir}/${ccts.grid-services.working.tomcat.file}.zip" dest="${ccts.grid-services.working.location}" />
        <unzip src="${ivy.jar.dir}/${ccts.grid-services.working.globus.file}.zip" dest="${ccts.grid-services.working.location}" />
        <subant target="deploySecureTomcat">
            <property name="tomcat.dir" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}"/>
            <fileset dir="${ccts.grid-services.working.location}/${ccts.grid-services.working.globus.file}" includes="share/globus_wsrf_common/tomcat/tomcat.xml"/>
        </subant>
	</target>

    <target name="remove-conflict-artifacts" description="Cleans conflicting jars copied by Globus deployment inside wsrf folder">
        <property name="wsrf-root" value="${ccts.grid-services.working.location}/${ccts.grid-services.working.tomcat.file}/webapps/${wsrf}"/>

        <delete file="${wsrf-root}/WEB-INF/lib/commons-beanutils.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/commons-digester.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/commons-collections-3.0.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/commons-collections-3.0.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/concurrent.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/wsdl4j.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/xercesImpl.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/lib/xmlsec.jar" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/classes/log4j.properties" failonerror="false"/>
        <delete file="${wsrf-root}/WEB-INF/web.xml" failonerror="false"/>

        <delete>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="bouncycastle-jce-jdk13-125-cagrid1.0.jar" />
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="cog-jglobus*.jar"/>
            <!--<fileset dir="${wsrf-root}/WEB-INF/lib" includes="cog-url*.jar"/>-->
            <!--<fileset dir="${wsrf-root}/WEB-INF/lib" includes="cog-tomcat*.jar"/>-->
            <!--<fileset dir="${wsrf-root}/WEB-INF/lib" includes="cog-axis*.jar"/>-->
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="cryptix*.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="puretls*.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="caGrid-core-1.2.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="caGrid-metadata*1.2.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="commons-cli-1.0.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="spring*1.2.9.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="spring*2.0.2.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="spring-modules-jcr-0.6.jar"/>
            <fileset dir="${wsrf-root}/WEB-INF/lib" includes="*.war"/>
        </delete>

    </target>


</project>