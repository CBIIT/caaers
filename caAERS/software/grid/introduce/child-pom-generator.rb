#!/usr/bin/env ruby

require 'erb'
require 'fileutils'
include FileUtils

class PomBinding
  attr_reader :service_name
  
  def initialize(service_name)
    @service_name = service_name
  end

  def name
    parts = name_parts.collect { |p| if p == "ae"; p.upcase; else p; end }
    "caAERS grid - #{parts.join(' ')}"
  end

  def artifactId
    "caaers-grid-#{name_parts.join('-')}"
  end
  
  def name_parts
    parts = []
    service_name.split("-").each do |segment|
      segment.gsub(/([^-])([A-Z])/, "\\1-\\2").downcase.gsub("adverse-event", "ae").split('-').each do |p|
        parts << p
      end
    end
    parts
  end
  
  def get_binding
    binding
  end
end

TEMPLATE_NAME = "child-pom.rxml"
WARNING_COMMENT = <<COMMENT
<!-- This POM was generated by #{File.basename($0)} using #{TEMPLATE_NAME}.
     Make changes to that template, not this file. -->
COMMENT

cd File.dirname($0)

template = ERB.new(open(TEMPLATE_NAME) { |f| f.read })

`find . -name 'introduce.properties'`.split("\n").each do |filename|
  service_name = filename.split('/')[1]
  p = PomBinding.new service_name
  open("#{service_name}/pom.xml", "w") do |f|
    f.write(template.result(p.get_binding))
  end
end