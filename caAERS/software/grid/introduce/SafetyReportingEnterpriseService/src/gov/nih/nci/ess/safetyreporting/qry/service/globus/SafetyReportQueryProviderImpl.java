/*******************************************************************************
 * Copyright SemanticBits, Northwestern University and Akaza Research
 * 
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/caaers/LICENSE.txt for details.
 ******************************************************************************/
package gov.nih.nci.ess.safetyreporting.qry.service.globus;

import gov.nih.nci.ess.safetyreporting.qry.service.SafetyReportQueryImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the SafetyReportingEnterpriseServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class SafetyReportQueryProviderImpl{
	
	SafetyReportQueryImpl impl;
	
	public SafetyReportQueryProviderImpl() throws RemoteException {
		impl = new SafetyReportQueryImpl();
	}
	

    public gov.nih.nci.ess.safetyreporting.qry.stubs.QuerySafetyReportsResponse querySafetyReports(gov.nih.nci.ess.safetyreporting.qry.stubs.QuerySafetyReportsRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.qry.stubs.QuerySafetyReportsResponse boxedResult = new gov.nih.nci.ess.safetyreporting.qry.stubs.QuerySafetyReportsResponse();
    boxedResult.setDSET_SafetyReportVersion(impl.querySafetyReports(params.getSafetyReportVersion().getSafetyReportVersion()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.qry.stubs.GetSafetyReportsResponse getSafetyReports(gov.nih.nci.ess.safetyreporting.qry.stubs.GetSafetyReportsRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.qry.stubs.GetSafetyReportsResponse boxedResult = new gov.nih.nci.ess.safetyreporting.qry.stubs.GetSafetyReportsResponse();
    boxedResult.setDSET_SafetyReportVersion(impl.getSafetyReports(params.getDSET_II().getDSET_II()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.qry.stubs.ViewSafetyReportResponse viewSafetyReport(gov.nih.nci.ess.safetyreporting.qry.stubs.ViewSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.qry.stubs.ViewSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.qry.stubs.ViewSafetyReportResponse();
    boxedResult.setSafetyReportFormat(impl.viewSafetyReport(params.getSafetyReportId().getId(),params.getDesiredFormat().getST()));
    return boxedResult;
  }

}
