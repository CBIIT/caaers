package gov.nih.nci.ess.safetyreporting.tx.service.globus;

import gov.nih.nci.ess.safetyreporting.tx.service.SafetyReportTransactionImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the SafetyReportingEnterpriseServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class SafetyReportTransactionProviderImpl{
	
	SafetyReportTransactionImpl impl;
	
	public SafetyReportTransactionProviderImpl() throws RemoteException {
		impl = new SafetyReportTransactionImpl();
	}
	

    public gov.nih.nci.ess.safetyreporting.tx.stubs.AmendSafetyReportResponse amendSafetyReport(gov.nih.nci.ess.safetyreporting.tx.stubs.AmendSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.tx.stubs.AmendSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.tx.stubs.AmendSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.amendSafetyReport(params.getSafetyReportId().getId(),params.getAmendmentId().getId(),params.getReasonForAmend().getST()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.tx.stubs.SubmitSafetyReportResponse submitSafetyReport(gov.nih.nci.ess.safetyreporting.tx.stubs.SubmitSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.tx.stubs.SubmitSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.tx.stubs.SubmitSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.submitSafetyReport(params.getSafetyReportId().getId(),params.getSubmitterId().getId(),params.getAdditionalRecipientIds().getDSET_II()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.tx.stubs.WithdrawSafetyReportResponse withdrawSafetyReport(gov.nih.nci.ess.safetyreporting.tx.stubs.WithdrawSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.tx.stubs.WithdrawSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.tx.stubs.WithdrawSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.withdrawSafetyReport(params.getSafetyReportId().getId(),params.getWithdrawerId().getId(),params.getReasonForWithdraw().getST()));
    return boxedResult;
  }

}
