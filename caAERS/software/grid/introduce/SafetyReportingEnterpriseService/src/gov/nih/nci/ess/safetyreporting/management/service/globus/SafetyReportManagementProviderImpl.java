package gov.nih.nci.ess.safetyreporting.management.service.globus;

import gov.nih.nci.ess.safetyreporting.management.service.SafetyReportManagementImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the SafetyReportingEnterpriseServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class SafetyReportManagementProviderImpl{
	
	SafetyReportManagementImpl impl;
	
	public SafetyReportManagementProviderImpl() throws RemoteException {
		impl = new SafetyReportManagementImpl();
	}
	

    public gov.nih.nci.ess.safetyreporting.management.stubs.AssociateStudyToSafetyReportResponse associateStudyToSafetyReport(gov.nih.nci.ess.safetyreporting.management.stubs.AssociateStudyToSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.management.stubs.AssociateStudyToSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.management.stubs.AssociateStudyToSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.associateStudyToSafetyReport(params.getSafetyReportId().getId(),params.getStudyId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.management.stubs.InitiateSafetyReportResponse initiateSafetyReport(gov.nih.nci.ess.safetyreporting.management.stubs.InitiateSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.management.stubs.InitiateSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.management.stubs.InitiateSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.initiateSafetyReport(params.getStudyId().getId(),params.getSubjectId().getId(),params.getPatientId().getId(),params.getAdverseEventIds().getDSET_II(),params.getProblemIds().getDSET_II(),params.getAdverseEventReportingPeriod().getAdverseEventReportingPeriod()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.management.stubs.AssociateAdverseEventsToSafetyReportResponse associateAdverseEventsToSafetyReport(gov.nih.nci.ess.safetyreporting.management.stubs.AssociateAdverseEventsToSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.management.stubs.AssociateAdverseEventsToSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.management.stubs.AssociateAdverseEventsToSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.associateAdverseEventsToSafetyReport(params.getSafetyReportId().getId(),params.getAdverseEventIds().getDSET_II()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.management.stubs.DissociateAdverseEventsFromSafetyReportResponse dissociateAdverseEventsFromSafetyReport(gov.nih.nci.ess.safetyreporting.management.stubs.DissociateAdverseEventsFromSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.management.stubs.DissociateAdverseEventsFromSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.management.stubs.DissociateAdverseEventsFromSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.dissociateAdverseEventsFromSafetyReport(params.getSafetyReportId().getId(),params.getAdverseEventIds().getDSET_II()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.management.stubs.UpdateAdverseEventInformationInSafetyReportResponse updateAdverseEventInformationInSafetyReport(gov.nih.nci.ess.safetyreporting.management.stubs.UpdateAdverseEventInformationInSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.management.stubs.UpdateAdverseEventInformationInSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.management.stubs.UpdateAdverseEventInformationInSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.updateAdverseEventInformationInSafetyReport(params.getSafetyReportId().getId(),params.getAdverseEvent().getAdverseEvent()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.management.stubs.AssociateProblemToSafetyReportResponse associateProblemToSafetyReport(gov.nih.nci.ess.safetyreporting.management.stubs.AssociateProblemToSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.management.stubs.AssociateProblemToSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.management.stubs.AssociateProblemToSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.associateProblemToSafetyReport());
    return boxedResult;
  }

}
