package gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.service.globus;

import gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.service.SafetyReportManagementImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the SafetyReportingEnterpriseServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correctly mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.4
 * 
 */
public class SafetyReportManagementProviderImpl{
	
	SafetyReportManagementImpl impl;
	
	public SafetyReportManagementProviderImpl() throws RemoteException {
		impl = new SafetyReportManagementImpl();
	}
	

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateAdverseEventsToSafetyReportResponse associateAdverseEventsToSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateAdverseEventsToSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateAdverseEventsToSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateAdverseEventsToSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.associateAdverseEventsToSafetyReport(params.getAdverseEventIdentifiers().getDSET_II(),params.getSafetyReportIdentifier().getId()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportResponse associateProblemToSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportRequest params) throws RemoteException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportResponse();
    impl.associateProblemToSafetyReport();
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateAdverseEventsFromSafetyReportResponse dissociateAdverseEventsFromSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateAdverseEventsFromSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateAdverseEventsFromSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateAdverseEventsFromSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.dissociateAdverseEventsFromSafetyReport(params.getSafetyReportIdentifier().getId(),params.getAdverseEventIdentifiers().getDSET_II()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportResponse dissociateProblemFromSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportRequest params) throws RemoteException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportResponse();
    impl.dissociateProblemFromSafetyReport();
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportResponse updateAdverseEventInformationInSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.updateAdverseEventInformationInSafetyReport(params.getSafetyReportIdentifier().getId(),params.getAdverseEvent().getAdverseEvent()));
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportResponse updateProblemInformationInSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportRequest params) throws RemoteException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportResponse();
    impl.updateProblemInformationInSafetyReport();
    return boxedResult;
  }

    public gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.InitiateSafetyReportResponse initiateSafetyReport(gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.InitiateSafetyReportRequest params) throws RemoteException, gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.types.SafetyReportingServiceException {
    gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.InitiateSafetyReportResponse boxedResult = new gov.nih.nci.ess.safetyreporting.service.safetyreportmanagement.stubs.InitiateSafetyReportResponse();
    boxedResult.setSafetyReportVersion(impl.initiateSafetyReport(params.getStudyIdentifier().getId(),params.getSubjectIdentifier().getId(),params.getPatientIdentifier().getId(),params.getAdverseEventIdentifiers().getDSET_II(),params.getProblemIdentifiers().getDSET_II(),params.getAdverseEventReportingPeriod().getAdverseEventReportingPeriod()));
    return boxedResult;
  }

}
