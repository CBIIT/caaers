/*******************************************************************************
 * Copyright SemanticBits, Northwestern University and Akaza Research
 * 
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/caaers/LICENSE.txt for details.
 ******************************************************************************/
package gov.nih.nci.ess.safetyreporting.rules.service;

import java.rmi.RemoteException;

/** 
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class SafetyReportRulesManagementImpl extends SafetyReportRulesManagementImplBase {

	
	public SafetyReportRulesManagementImpl() throws RemoteException {
		super();
	}
	
  public gov.nih.nci.ess.safetyreporting.types.ReportingRule createOrganizationSafetyReportingRules(gov.nih.nci.ess.safetyreporting.types.ReportingRule reportingRule,ess.caaers.nci.nih.gov.Id organizationId) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.ReportingRule updateOrganizationSafetyReportingRules(gov.nih.nci.ess.safetyreporting.types.ReportingRule reportingRule,ess.caaers.nci.nih.gov.Id organizationId) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.ReportingRule deactivateOrganizationSafetyReportingRules(ess.caaers.nci.nih.gov.Id organizationId,_21090.org.iso.ST reasonForDeactivation) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.ReportingRule createStudySafetyReportingRules(gov.nih.nci.ess.safetyreporting.types.ReportingRule reportingRule,ess.caaers.nci.nih.gov.Id studyId,ess.caaers.nci.nih.gov.Id organizationId) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.ReportingRule updateStudySafetyReportingRules(gov.nih.nci.ess.safetyreporting.types.ReportingRule reportingRule,ess.caaers.nci.nih.gov.Id studyId,ess.caaers.nci.nih.gov.Id organizationId) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.ReportingRule deactivateStudySafetyReportingRules(ess.caaers.nci.nih.gov.Id studyId,ess.caaers.nci.nih.gov.Id organizationId,_21090.org.iso.ST reasonForDeactivation) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.DSET_ReportingRule querySafetyReportingRules(gov.nih.nci.ess.safetyreporting.types.ReportingRule reportingRule) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.ess.safetyreporting.types.ReportingRule getSafetyReportingRules(ess.caaers.nci.nih.gov.Id ruleId) throws RemoteException, gov.nih.nci.ess.safetyreporting.management.stubs.types.SafetyReportingServiceException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

}

