package gov.nih.nci.ess.sr.service.safetyreportmanagement.client;

import java.io.InputStream;
import java.rmi.RemoteException;

import javax.xml.namespace.QName;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.client.Stub;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;

import org.oasis.wsrf.properties.GetResourcePropertyResponse;

import org.globus.gsi.GlobusCredential;

import gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.SafetyReportManagementPortType;
import gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.service.SafetyReportManagementServiceAddressingLocator;
import gov.nih.nci.ess.sr.service.safetyreportmanagement.common.SafetyReportManagementI;
import gov.nih.nci.cagrid.introduce.security.client.ServiceSecurityClient;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 * 
 * @created by Introduce Toolkit version 1.4
 */
public class SafetyReportManagementClient extends SafetyReportManagementClientBase implements SafetyReportManagementI {	

	public SafetyReportManagementClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);	
	}

	public SafetyReportManagementClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	}
	
	public SafetyReportManagementClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}
	
	public SafetyReportManagementClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
	}

	public static void usage(){
		System.out.println(SafetyReportManagementClient.class.getName() + " -url <service url>");
	}
	
	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  SafetyReportManagementClient client = new SafetyReportManagementClient(args[1]);
			  // place client calls here if you want to use this main as a
			  // test....
			} else {
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

  public org.oasis.wsrf.lifetime.DestroyResponse destroy(org.oasis.wsrf.lifetime.Destroy params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"destroy");
    return portType.destroy(params);
    }
  }

  public org.oasis.wsrf.lifetime.SetTerminationTimeResponse setTerminationTime(org.oasis.wsrf.lifetime.SetTerminationTime params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"setTerminationTime");
    return portType.setTerminationTime(params);
    }
  }

  public sr.SafetyReportVersion initiateSafetyReport(ess.caaers.nci.nih.gov.Id safetyReportIdentifier,ess.caaers.nci.nih.gov.Id studyIdentifier,ess.caaers.nci.nih.gov.Id subjectIdentifier,ess.caaers.nci.nih.gov.Id patientIdentifier,ess.caaers.nci.nih.gov.Id adverseEventIdentifier,ess.caaers.nci.nih.gov.Id performedProductInvestigationResultIdentifier) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"initiateSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestSafetyReportIdentifier safetyReportIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestSafetyReportIdentifier();
    safetyReportIdentifierContainer.setId(safetyReportIdentifier);
    params.setSafetyReportIdentifier(safetyReportIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestStudyIdentifier studyIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestStudyIdentifier();
    studyIdentifierContainer.setId(studyIdentifier);
    params.setStudyIdentifier(studyIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestSubjectIdentifier subjectIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestSubjectIdentifier();
    subjectIdentifierContainer.setId(subjectIdentifier);
    params.setSubjectIdentifier(subjectIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestPatientIdentifier patientIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestPatientIdentifier();
    patientIdentifierContainer.setId(patientIdentifier);
    params.setPatientIdentifier(patientIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestAdverseEventIdentifier adverseEventIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestAdverseEventIdentifier();
    adverseEventIdentifierContainer.setId(adverseEventIdentifier);
    params.setAdverseEventIdentifier(adverseEventIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestPerformedProductInvestigationResultIdentifier performedProductInvestigationResultIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportRequestPerformedProductInvestigationResultIdentifier();
    performedProductInvestigationResultIdentifierContainer.setId(performedProductInvestigationResultIdentifier);
    params.setPerformedProductInvestigationResultIdentifier(performedProductInvestigationResultIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.InitiateSafetyReportResponse boxedResult = portType.initiateSafetyReport(params);
    return boxedResult.getSafetyReportVersion();
    }
  }

  public sr.SafetyReportVersion associateAEToSafetyReport(ess.caaers.nci.nih.gov.Id safetyReportIdentifier,_21090.org.iso.DSET_II adverseEventIdentifiers) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"associateAEToSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportRequestSafetyReportIdentifier safetyReportIdentifierContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportRequestSafetyReportIdentifier();
    safetyReportIdentifierContainer.setId(safetyReportIdentifier);
    params.setSafetyReportIdentifier(safetyReportIdentifierContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportRequestAdverseEventIdentifiers adverseEventIdentifiersContainer = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportRequestAdverseEventIdentifiers();
    adverseEventIdentifiersContainer.setDSET_II(adverseEventIdentifiers);
    params.setAdverseEventIdentifiers(adverseEventIdentifiersContainer);
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAEToSafetyReportResponse boxedResult = portType.associateAEToSafetyReport(params);
    return boxedResult.getSafetyReportVersion();
    }
  }

  public void associateProblemToSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"associateProblemToSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateProblemToSafetyReportResponse boxedResult = portType.associateProblemToSafetyReport(params);
    }
  }

  public void dissociateAEFromSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"dissociateAEFromSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateAEFromSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateAEFromSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateAEFromSafetyReportResponse boxedResult = portType.dissociateAEFromSafetyReport(params);
    }
  }

  public void dissociateProblemFromSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"dissociateProblemFromSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateProblemFromSafetyReportResponse boxedResult = portType.dissociateProblemFromSafetyReport(params);
    }
  }

  public void updateAdverseEventInformationInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateAdverseEventInformationInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateAdverseEventInformationInSafetyReportResponse boxedResult = portType.updateAdverseEventInformationInSafetyReport(params);
    }
  }

  public void updateProblemInformationInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateProblemInformationInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateProblemInformationInSafetyReportResponse boxedResult = portType.updateProblemInformationInSafetyReport(params);
    }
  }

  public void associateStudyToSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"associateStudyToSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateStudyToSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateStudyToSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateStudyToSafetyReportResponse boxedResult = portType.associateStudyToSafetyReport(params);
    }
  }

  public void associateAdditionalInformationToSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"associateAdditionalInformationToSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAdditionalInformationToSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAdditionalInformationToSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateAdditionalInformationToSafetyReportResponse boxedResult = portType.associateAdditionalInformationToSafetyReport(params);
    }
  }

  public void associateSubjectToSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"associateSubjectToSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateSubjectToSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateSubjectToSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.AssociateSubjectToSafetyReportResponse boxedResult = portType.associateSubjectToSafetyReport(params);
    }
  }

  public void dissociateStudyFromSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"dissociateStudyFromSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateStudyFromSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateStudyFromSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociateStudyFromSafetyReportResponse boxedResult = portType.dissociateStudyFromSafetyReport(params);
    }
  }

  public void dissociatePersonFromSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"dissociatePersonFromSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociatePersonFromSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociatePersonFromSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.DissociatePersonFromSafetyReportResponse boxedResult = portType.dissociatePersonFromSafetyReport(params);
    }
  }

  public void updateAttributionInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateAttributionInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateAttributionInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateAttributionInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateAttributionInSafetyReportResponse boxedResult = portType.updateAttributionInSafetyReport(params);
    }
  }

  public void updateInterventionInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateInterventionInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateInterventionInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateInterventionInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateInterventionInSafetyReportResponse boxedResult = portType.updateInterventionInSafetyReport(params);
    }
  }

  public void updateLabTestResultsInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateLabTestResultsInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateLabTestResultsInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateLabTestResultsInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateLabTestResultsInSafetyReportResponse boxedResult = portType.updateLabTestResultsInSafetyReport(params);
    }
  }

  public void updateOtherPossibleCausesInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateOtherPossibleCausesInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateOtherPossibleCausesInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateOtherPossibleCausesInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateOtherPossibleCausesInSafetyReportResponse boxedResult = portType.updateOtherPossibleCausesInSafetyReport(params);
    }
  }

  public void updatePatientClinicalMeasurementsInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePatientClinicalMeasurementsInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientClinicalMeasurementsInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientClinicalMeasurementsInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientClinicalMeasurementsInSafetyReportResponse boxedResult = portType.updatePatientClinicalMeasurementsInSafetyReport(params);
    }
  }

  public void updatePatientDiseaseHistoryInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePatientDiseaseHistoryInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientDiseaseHistoryInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientDiseaseHistoryInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientDiseaseHistoryInSafetyReportResponse boxedResult = portType.updatePatientDiseaseHistoryInSafetyReport(params);
    }
  }

  public void updatePatientConMedsInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePatientConMedsInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientConMedsInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientConMedsInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientConMedsInSafetyReportResponse boxedResult = portType.updatePatientConMedsInSafetyReport(params);
    }
  }

  public void updatePatientPriorTherapiesInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePatientPriorTherapiesInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientPriorTherapiesInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientPriorTherapiesInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientPriorTherapiesInSafetyReportResponse boxedResult = portType.updatePatientPriorTherapiesInSafetyReport(params);
    }
  }

  public void updatePatientDemographicsInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePatientDemographicsInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientDemographicsInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientDemographicsInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientDemographicsInSafetyReportResponse boxedResult = portType.updatePatientDemographicsInSafetyReport(params);
    }
  }

  public void updateReporterInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateReporterInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateReporterInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateReporterInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateReporterInSafetyReportResponse boxedResult = portType.updateReporterInSafetyReport(params);
    }
  }

  public void updateHealthcareProviderInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateHealthcareProviderInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateHealthcareProviderInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateHealthcareProviderInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateHealthcareProviderInSafetyReportResponse boxedResult = portType.updateHealthcareProviderInSafetyReport(params);
    }
  }

  public void updateSubmitterInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateSubmitterInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateSubmitterInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateSubmitterInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateSubmitterInSafetyReportResponse boxedResult = portType.updateSubmitterInSafetyReport(params);
    }
  }

  public void updateProductProblemInformationInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateProductProblemInformationInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateProductProblemInformationInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateProductProblemInformationInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateProductProblemInformationInSafetyReportResponse boxedResult = portType.updateProductProblemInformationInSafetyReport(params);
    }
  }

  public void updatePatientStatusInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePatientStatusInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientStatusInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientStatusInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePatientStatusInSafetyReportResponse boxedResult = portType.updatePatientStatusInSafetyReport(params);
    }
  }

  public void updatePlannedInterventionInformationInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePlannedInterventionInformationInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePlannedInterventionInformationInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePlannedInterventionInformationInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdatePlannedInterventionInformationInSafetyReportResponse boxedResult = portType.updatePlannedInterventionInformationInSafetyReport(params);
    }
  }

  public void updateNarrativeInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateNarrativeInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateNarrativeInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateNarrativeInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateNarrativeInSafetyReportResponse boxedResult = portType.updateNarrativeInSafetyReport(params);
    }
  }

  public void updateTreatmentInformationInSafetyReport() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateTreatmentInformationInSafetyReport");
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateTreatmentInformationInSafetyReportRequest params = new gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateTreatmentInformationInSafetyReportRequest();
    gov.nih.nci.ess.sr.service.safetyreportmanagement.stubs.UpdateTreatmentInformationInSafetyReportResponse boxedResult = portType.updateTreatmentInformationInSafetyReport(params);
    }
  }

}
