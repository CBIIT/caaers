package gov.nih.nci.ess.ae.service.aeassociate.service.globus;

import gov.nih.nci.ess.ae.service.aeassociate.service.AEAssociateImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the AdverseEventEnterpriseServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class AEAssociateProviderImpl{
	
	AEAssociateImpl impl;
	
	public AEAssociateProviderImpl() throws RemoteException {
		impl = new AEAssociateImpl();
	}
	

    public gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdverseEventToStudyResponse associateAdverseEventToStudy(gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdverseEventToStudyRequest params) throws RemoteException, gov.nih.nci.ess.ae.service.management.stubs.types.AdverseEventServiceException {
    gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdverseEventToStudyResponse boxedResult = new gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdverseEventToStudyResponse();
    impl.associateAdverseEventToStudy(params.getAdverseEventIdentifier().getId(),params.getStudyIdentifier().getId());
    return boxedResult;
  }

    public gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdverseEventFromStudyResponse dissociateAdverseEventFromStudy(gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdverseEventFromStudyRequest params) throws RemoteException, gov.nih.nci.ess.ae.service.management.stubs.types.AdverseEventServiceException {
    gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdverseEventFromStudyResponse boxedResult = new gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdverseEventFromStudyResponse();
    impl.dissociateAdverseEventFromStudy(params.getAdverseEventIdentifier().getId(),params.getStudyIdentifier().getId());
    return boxedResult;
  }

    public gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdditionalInformationToAdverseEventResponse associateAdditionalInformationToAdverseEvent(gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdditionalInformationToAdverseEventRequest params) throws RemoteException, gov.nih.nci.ess.ae.service.management.stubs.types.AdverseEventServiceException {
    gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdditionalInformationToAdverseEventResponse boxedResult = new gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateAdditionalInformationToAdverseEventResponse();
    impl.associateAdditionalInformationToAdverseEvent(params.getAdverseEventIdentifier().getId(),params.getAdditionalInformation().getAdditionalInformation());
    return boxedResult;
  }

    public gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdditionalInformationFromAdverseEventResponse dissociateAdditionalInformationFromAdverseEvent(gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdditionalInformationFromAdverseEventRequest params) throws RemoteException, gov.nih.nci.ess.ae.service.management.stubs.types.AdverseEventServiceException {
    gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdditionalInformationFromAdverseEventResponse boxedResult = new gov.nih.nci.ess.ae.service.aeassociate.stubs.DissociateAdditionalInformationFromAdverseEventResponse();
    impl.dissociateAdditionalInformationFromAdverseEvent(params.getAdverseEventIdentifier().getId(),params.getAdditionalInformation().getAdditionalInformation());
    return boxedResult;
  }

    public gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateTreatmentInformationToAdverseEventResponse associateTreatmentInformationToAdverseEvent(gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateTreatmentInformationToAdverseEventRequest params) throws RemoteException, gov.nih.nci.ess.ae.service.management.stubs.types.AdverseEventServiceException {
    gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateTreatmentInformationToAdverseEventResponse boxedResult = new gov.nih.nci.ess.ae.service.aeassociate.stubs.AssociateTreatmentInformationToAdverseEventResponse();
    impl.associateTreatmentInformationToAdverseEvent(params.getAdverseEventIdentifier().getId(),params.getTreatmentInformation().getTreatmentInformation());
    return boxedResult;
  }

    public gov.nih.nci.ess.ae.service.aeassociate.stubs.DisassociateTreatmentInformationFromAdverseEventResponse disassociateTreatmentInformationFromAdverseEvent(gov.nih.nci.ess.ae.service.aeassociate.stubs.DisassociateTreatmentInformationFromAdverseEventRequest params) throws RemoteException, gov.nih.nci.ess.ae.service.management.stubs.types.AdverseEventServiceException {
    gov.nih.nci.ess.ae.service.aeassociate.stubs.DisassociateTreatmentInformationFromAdverseEventResponse boxedResult = new gov.nih.nci.ess.ae.service.aeassociate.stubs.DisassociateTreatmentInformationFromAdverseEventResponse();
    impl.disassociateTreatmentInformationFromAdverseEvent(params.getAdverseEventIdentifier().getId(),params.getTreatmentInformation().getTreatmentInformation());
    return boxedResult;
  }

}
