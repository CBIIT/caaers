<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Apache ServiceMix Archetype -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <context:annotation-config />
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    	<package>gov.nih.nci.cabig.caaers2adeers</package> 
    </camelContext>
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename">
            <value>classpath:caxchange.properties</value>
        </property>
    </bean>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:caxchange.properties</value>
        </property>
        <property name="placeholderPrefix"><value>s[</value></property>
        <property name="placeholderSuffix"><value>]</value></property>
        <property name="ignoreResourceNotFound"><value>true</value></property>
        <property name="ignoreUnresolvablePlaceholders"><value>true</value></property>
    </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="s[caaers.datasource.driver]"/>
        <property name="url" value="s[caaers.datasource.url]"/>
        <property name="username" value="s[caaers.datasource.username]"/>
        <property name="password" value="s[caaers.datasource.password]"/>
    </bean>

    <bean id="integrationLogDao" class="gov.nih.nci.cabig.caaers2adeers.track.IntegrationLogDao">
       <property name="hibernateTemplate" ref="hibernateTemplate" />
    </bean>
    <bean id="headerGeneratorProcessor" class="gov.nih.nci.cabig.caaers2adeers.exchnage.HeaderGeneratorProcessor"/>
    <bean id="exchangePreProcessor" class="gov.nih.nci.cabig.caaers2adeers.exchnage.ExchangePreProcessor">
        <property name="caaersWSUser" value="s[CAAERS_WS_USERNAME]" />
        <property name="caaersWSPassword" value="s[CAAERS_WS_PASSWORD]" />
        <property name="adeersWSUser" value="s[ADEERS_WS_USERNAME]" />
        <property name="adeersWSPassword" value="s[ADEERS_WS_PASSWORD]" />
    </bean>
    <bean id="xslt" class="gov.nih.nci.cabig.caaers2adeers.xslt.CustomXsltComponent" />
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
    	<property name="namingStrategy" ref="wonderfulNamingStrategy" />
    	<property name="annotatedClasses">
            <list>
                <value>gov.nih.nci.cabig.caaers2adeers.track.IntegrationLog</value>
                <value>gov.nih.nci.cabig.caaers2adeers.track.IntegrationLogDetail</value>
            </list>
		</property>
		<property name="hibernateProperties" ref="hibernateProperties" /> 
    </bean>
    <bean id="wonderfulNamingStrategy" class="gov.nih.nci.cabig.caaers2adeers.hibernate.WonderfulNamingStrategy">
      <property name="uppercaseColumnNames">
       <value>empty_empty</value>
      </property>
     </bean>
     <bean id="hibernateProperties" class="gov.nih.nci.cabig.caaers2adeers.hibernate.HibernatePropertiesFactoryBean">
        <property name="dialectName">
            <value>s[caaers.datasource.dialect]</value>
        </property>
        <property name="properties">
            <props>
                <prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
                <prop key="hibernate.jdbc.batch_size">30</prop>
                <prop key="hibernate.jdbc.fetch_size">10</prop>

                <!-- make sure the below properties are set to false in production -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>

                <!-- caching -->
                <!-- <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.SingletonEhCacheProvider</prop> -->

            </props>
        </property>
    </bean>
     
     <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="checkWriteOperations">
            <value>false</value>
        </property>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>


    <!--=================Route Builders & Cron Jobs Payload related ====================-->

    <bean id="toAdeersRouteBuilder" class="gov.nih.nci.cabig.caaers2adeers.ToAdeersRouteBuilder"/>
    <bean id="toCaaersClientRouteBuilder" class="gov.nih.nci.cabig.caaers2adeers.ToCaaersClientRouteBuilder"/>
    <bean id="toCaaersWebserviceRouteBuilder" class="gov.nih.nci.cabig.caaers2adeers.ToCaaersWebserviceRouteBuilder"/>
    <bean id="cronJobRouteBuilder" class="gov.nih.nci.cabig.caaers2adeers.CronJobRouteBuilder"/>
    <bean id="payloadGenerator" class="gov.nih.nci.cabig.caaers2adeers.cronjob.PayloadGenerator" />
</beans>
