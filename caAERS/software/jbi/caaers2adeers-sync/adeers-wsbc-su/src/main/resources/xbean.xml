<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Apache ServiceMix Archetype -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxfbc="http://servicemix.apache.org/cxfbc/1.0" 
    xmlns:ctep="http://services.ctep.nci.nih.gov/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://servicemix.apache.org/cxfbc/1.0 http://servicemix.apache.org/schema/servicemix-cxfbc-2011.02.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
    <!-- 
        A provider endpoint is a client side JBI endpoint which can receive requests from the NMR and send
        them to a given URL where the service is provided.
        
        Attributes:
            wsdl                    : the WSDL will be retrieved from the given location
            service                 : the service name of the exposed endpoint
            endpoint                : the endpoint name of the exposed endpoint
            interfaceName           : the interface name of the exposed endpoint
            locationURI             : the HTTP URL of the target service (external)
            bugCfg                  : the Spring configuration file used for CXF bus initialization
            mtomEnabled             : enable MTOM/attachment support
            useJBIWrapper           : specifies if the endpoint expects messages to use the JBI wrapper for SOAP messages
            useSOAPEnvelope         : specifies if the endpoint expects SOAP messages when useJBIWrapper is false
            schemaValidationEnabled : specifies if the endpoint use schema validation for the incoming/outgoing message
            properties              : sets arbitrary properties that are added to the CXF content at endpoint level
    -->
	<cxfbc:provider interfaceName="ctep:AELOVService"  service="ctep:CESAELOVService"
            endpoint="CESAELOVPort"
			wsdl="classpath:CESAELOVService.wsdl"
			locationURI="s[ADEERS_LOV_WS_BINDING_URL]" useJBIWrapper="false">

		<cxfbc:inFaultInterceptors>
		  <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
		</cxfbc:inFaultInterceptors>
        <cxfbc:inInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
        </cxfbc:inInterceptors>
        <cxfbc:outFaultInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
        </cxfbc:outFaultInterceptors>
        <cxfbc:outInterceptors>
            <ref local="wss4jOutInterceptor" />
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
        </cxfbc:outInterceptors>

	</cxfbc:provider>

    <cxfbc:provider interfaceName="ctep:AEStudyService"  service="ctep:CESAEStudyService"
                    endpoint="CESAEStudyPort"
                    wsdl="classpath:CESAEStudyService.wsdl"
                    locationURI="s[ADEERS_STUDY_WS_BINDING_URL]" useJBIWrapper="false">
        <cxfbc:inFaultInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
        </cxfbc:inFaultInterceptors>
        <cxfbc:inInterceptors>
        <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
        </cxfbc:inInterceptors>
        <cxfbc:outFaultInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
        </cxfbc:outFaultInterceptors>
        <cxfbc:outInterceptors>
            <ref local="wss4jOutInterceptor" />
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
        </cxfbc:outInterceptors>
    </cxfbc:provider>
    <bean id="adEERSPasswordCallback" class="gov.nih.nci.cabig.caaers2adeers.AdeersWSPasswordCallback">
        <property name="caaersWSUser" value="s[CAAERS_WS_USERNAME]" />
        <property name="caaersWSPassword" value="s[CAAERS_WS_PASSWORD]" />
        <property name="adeersWSUser" value="s[ADEERS_WS_USERNAME]" />
        <property name="adeersWSPassword" value="s[ADEERS_WS_PASSWORD]" />
    </bean>
    <bean id="wss4jOutInterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
        <constructor-arg>
            <map>
                <entry key="action" value="UsernameToken"/>
                <entry key="user" value="s[ADEERS_WS_USERNAME]"/>
                <entry key="passwordType" value="PasswordText"/>
                <entry key="mustUnderstand" value="false"/>
                <entry key="Type" value="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
                <entry key="passwordCallbackRef">
                    <ref local="adEERSPasswordCallback" />
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:caxchange.properties</value>
        </property>
        <property name="placeholderPrefix"><value>s[</value></property>
        <property name="placeholderSuffix"><value>]</value></property>
        <property name="ignoreResourceNotFound"><value>false</value></property>
        <property name="ignoreUnresolvablePlaceholders"><value>true</value></property>
    </bean>
</beans>
