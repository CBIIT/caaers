<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
			   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
			   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
			   default-lazy-init="true">


    <bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /**=channelProcessingFilter,httpSessionContextIntegrationFilter,s[authenticationMode]LogoutFilter,s[authenticationMode]AuthenticationProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor,fabricatedAuthenticationFilter
            </value>
        </property>
    </bean>
    
    <bean id="fabricatedAuthenticationFilter" class="gov.nih.nci.cabig.caaers.web.security.FabricatedAuthenticationFilter" 
    	autowire-candidate="false" p:urlMap-ref="fabricatedAuthenticationURLMap"
    	p:researchStaffRepository-ref="researchStaffRepository" p:securityFacade-ref="caaersSecurityFacade"
    	p:investigatorRepository-ref="investigatorRepository" p:studyRepository-ref="studyRepository"
    	/>
        
    
    <bean id="httpSessionContextIntegrationFilter" class="org.acegisecurity.context.HttpSessionContextIntegrationFilter"/>
    <bean id="localLogoutFilter" class="org.acegisecurity.ui.logout.LogoutFilter">
        <constructor-arg value="/index.jsp"/>
        <!-- URL redirected to after logout -->
        <constructor-arg>
            <list>
                <bean class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler"/>
                <bean class="gov.nih.nci.cabig.caaers.web.security.HttpSessionPurgeLogoutHandler" />
            </list>
        </constructor-arg>
    </bean>
    <bean id="localAuthenticationProcessingFilter" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureUrl" value="/public/login?login_error=1"/>
        <property name="exceptionMappings">
      		<props>
        		<prop key="org.acegisecurity.CredentialsExpiredException">/public/user/resetPassword?login_error=1</prop>
      		</props>
    	</property>    
        <property name="defaultTargetUrl" value="/"/>
        <property name="filterProcessesUrl" value="/j_acegi_security_check"/>
    </bean>
    <bean id="localAuthenticationProcessingFilterEntryPoint" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
        <property name="loginFormUrl" value="/public/login"/>
        <property name="forceHttps" value="false"/>
    </bean>
    <bean id="securityContextHolderAwareRequestFilter" class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter"/>
    <bean id="anonymousProcessingFilter" class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
        <property name="key" value="anonymousAuthKey"/>
        <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
    </bean>
    <bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint" ref="s[authenticationMode]AuthenticationProcessingFilterEntryPoint"/>
        <property name="accessDeniedHandler">
            <bean class="org.acegisecurity.ui.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/accessDenied.jsp"/>
            </bean>
        </property>
    </bean>

	<bean id="filterInvocationInterceptor" class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager">
			<bean class="org.acegisecurity.vote.AffirmativeBased">
				<property name="allowIfAllAbstainDecisions" value="false"/>
				<property name="decisionVoters">
					<list>
						<bean class="gov.nih.nci.cabig.ctms.acegi.csm.vote.AuthorizationSwitchVoter">
							<property name="authorizationSwitch" ref="authorizationSwitch"/>
						</bean>
						<bean class="gov.nih.nci.cabig.ctms.acegi.csm.vote.CSMAuthorizationCheckVoter">
							<property name="processConfigAttribute" value="CSM_FILTER_CHECK"/>
							<property name="authorizationCheck" ref="urlAuthorizationCheck"/>
						</bean>
					</list>
				</property>
			</bean>
		</property>
		<property name="objectDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				\A/pages/.*\Z=CSM_FILTER_CHECK
			</value>
		</property>
	</bean>
	<bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="s[authenticationMode]AuthenticationProvider"/>
				<bean class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
					<property name="key" value="anonymousAuthKey"/>
				</bean>
			</list>
		</property>
	</bean>
 <!--
	<bean id="filterPrivilegeAndObjectIdGenerator" class="gov.nih.nci.cabig.caaers.web.security.FilterInvocationPrivilegeAndObjectIdGenerator">
		<property name="objectPrivilegeMap" ref="filterObjectPrivilegeMap"/>
	</bean>
 -->	
	<bean id="gridUserDetailsService" class="gov.nih.nci.cabig.ctms.acegi.grid.authorization.GridUserDetailsService" lazy-init="true">
		<property name="gridGroupSearch" ref="gridGroupSearch"/>
	</bean>
	<bean id="globusCredentialAuthenticationProvider" class="gov.nih.nci.cabig.ctms.acegi.grid.authentication.GlobusCredentialAuthenticationProvider" lazy-init="true">
		<property name="userDetailsService" ref="gridUserDetailsService"/>
		<property name="validator" ref="gridProxyValidator"/>
	</bean>
	<bean id="gridAuthenticationProvider" class="gov.nih.nci.cabig.ctms.acegi.grid.authentication.GridAuthenticationProvider" lazy-init="true">
		<property name="userDetailsService" ref="gridUserDetailsService"/>
		<property name="authenticationClient" ref="gridAuthenticationClient"/>
		<property name="validator" ref="gridProxyValidator"/>
		<property name="userCache" ref="userCache"/>
	</bean>

	<!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
	<bean id="loggerListener" class="gov.nih.nci.cabig.caaers.web.security.LoggerListener"/>
	<bean id="channelProcessingFilter" class="org.acegisecurity.securechannel.ChannelProcessingFilter">
		<property name="channelDecisionManager">
			<ref local="channelDecisionManager"/>
		</property>
		<property name="filterInvocationDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				\A.*\Z=REQUIRES_SECURE_CHANNEL
			</value>
		</property>
	</bean>
	<bean id="channelDecisionManager" class="org.acegisecurity.securechannel.ChannelDecisionManagerImpl">
		<property name="channelProcessors">
			<list>
				<ref local="secureChannelProcessor"/>
				<ref local="insecureChannelProcessor"/>
			</list>
		</property>
	</bean>
	<bean id="secureChannelProcessor" class="org.acegisecurity.securechannel.SecureChannelProcessor"/>
	<bean id="insecureChannelProcessor" class="org.acegisecurity.securechannel.InsecureChannelProcessor"/>
	<!--webSSO config-->
	<bean id="webSSOAuthenticationProcessingFilter" class="org.acegisecurity.ui.cas.CasProcessingFilter" lazy-init="true">
		<property name="authenticationManager">
			<ref bean="authenticationManager"/>
		</property>
		<property name="authenticationFailureUrl">
			<value>/decorated-error.jsp</value>
		</property>
		<property name="defaultTargetUrl">
			<value>/</value>
		</property>
		<property name="filterProcessesUrl">
			<value>/j_acegi_cas_security_check</value>
		</property>
	</bean>
	<bean id="webSSOAuthenticationProcessingFilterEntryPoint" class="org.acegisecurity.ui.cas.CasProcessingFilterEntryPoint" lazy-init="true">
		<property name="loginUrl" value="s[webSSO.server.baseUrl]"/>
		<property name="serviceProperties">
			<ref bean="serviceProperties"/>
		</property>
	</bean>
	<bean id="webSSOAuthenticationProvider" class="org.acegisecurity.providers.cas.CasAuthenticationProvider" lazy-init="true">
		<property name="casAuthoritiesPopulator">
			<ref local="casAuthoritiesPopulator"/>
		</property>
		<property name="casProxyDecider">
			<ref local="casProxyDecider"/>
		</property>
		<property name="ticketValidator">
			<ref local="casProxyTicketValidator"/>
		</property>
		<property name="statelessTicketCache">
			<ref local="statelessTicketCache"/>
		</property>
		<property name="key">
			<value>my_password_for_this_auth_provider_only</value>
		</property>
	</bean>
	<bean id="casProxyTicketValidator" class="gov.nih.nci.cabig.caaers.web.security.cas.CaaersCasProxyTicketValidator" lazy-init="true">
		<property name="casValidate" value="s[webSSO.server.baseUrl]/proxyValidate"/>
		<property name="serviceProperties">
			<ref local="serviceProperties"/>
		</property>
		<property name="trustStore" value="s[webSSO.trustStore]"/>
	</bean>
    <bean id="webSSOLogoutFilter"
          class="org.acegisecurity.ui.logout.LogoutFilter" lazy-init="true">
        <constructor-arg value="s[webSSO.server.baseUrl]/logout"/>
        <constructor-arg>
            <list>
                 <bean class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="serviceProperties" class="org.acegisecurity.ui.cas.ServiceProperties" lazy-init="true">
        <property name="service" value="s[webSSO.cas.acegi.security.url]"/>
        <property name="sendRenew">
            <value>false</value>
        </property>
    </bean>
    <bean id="casAuthoritiesPopulator" class="gov.nih.nci.cabig.caaers.security.WebSSOAuthoritiesPopulator" lazy-init="true">
        <property name="hostCertificate" value="s[hostCertificate]"/>
        <property name="hostKey" value="s[hostKey]"/>
        <property name="userDetailsService" ref="csmUserDetailsService" />
    </bean>
    <bean id="casProxyDecider" class="org.acegisecurity.providers.cas.proxy.RejectProxyTickets" lazy-init="true">
    </bean>
    <bean id="statelessTicketCache" class="org.acegisecurity.providers.cas.cache.EhCacheBasedTicketCache" lazy-init="true">
        <property name="cache">
            <ref local="ticketCacheBackend"/>
        </property>
    </bean>
    <bean id="ticketCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean" lazy-init="true">
        <property name="cacheManager" ref="cacheManager" />
        <property name="cacheName">
            <value>ticketCache</value>
        </property>
    </bean>
   
</beans>

