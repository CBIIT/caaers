<?xml version="1.0"?>
<project name="caaers-web" default="compile" basedir=".">
    <property name="src-dir.main"      value="src/main/java" />
    <property name="src-dir.unit-test" value="src/test/java" />

    <property name="build-dir.main"      value="build/main/classes"/>
    <property name="build-dir.unit-test" value="build/test/classes"/>
    <property name="build-dir.webapp"    value="build/main/webapp"/>

    <property name="war-name" value="${basedir}/../../caaers.war"/>

    <!-- CLASSPATHS -->

    <path id="cp.compiled-source">
        <pathelement location="${build-dir.main}"/>
    </path>

    <!-- this will need to be done better if we don't switch to maven -->
    <path id="cp.core.main">
        <fileset dir="../core/lib/main">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="../../caaers-core.jar"/>
    </path>

    <path id="cp.core.test">
        <fileset dir="../core/lib/test">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="../../caaers-core-testing.jar"/>
    </path>

    <path id="cp.csm">
        <fileset dir="../core/tools/csm/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="cp.main">
        <path refid="cp.compiled-source"/>
        <path refid="cp.core.main"/>
        <path refid="cp.csm"/>        
        <fileset dir="tools/j2ee/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="lib/main">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="cp.unit-test">
        <path refid="cp.main"/>
        <path refid="cp.core.test"/>
        <pathelement location="${build-dir.unit-test}"/>
        <fileset dir="lib/test">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="cp.tomcat.common">
        <fileset dir="tools/tomcat/lib/common">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="cp.tomcat.server">
        <fileset dir="tools/tomcat/lib/server">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- BASE TARGETS -->

    <target name="default-properties">
        <property name="test.failfast" value="false"/>
    </target>

    <target name="init" depends="default-properties">
        <mkdir dir="${build-dir.main}"/>
        <mkdir dir="${build-dir.unit-test}"/>
    </target>

    <!-- BUILD TARGETS -->

    <target name="clean">
        <delete dir="${build-dir.main}"/>
        <delete dir="${build-dir.unit-test}"/>
        <delete dir="${build-dir.webapp}"/>
        <delete file="${war-name}"/>
    </target>

    <target name="resources" description="Copy resources into classpath" depends="init">
        <copy todir="${build-dir.main}">
            <fileset dir="${src-dir.main}">
                <include name="**/*.xml"/>
                <include name="**/*.properties"/>
                <include name="**/*.ftl"/>
            </fileset>
        </copy>
        <copy todir="${build-dir.unit-test}">
            <fileset dir="${src-dir.unit-test}">
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" description="Compile all java source" depends="resources">
        <javac destdir="${build-dir.main}" classpathref="cp.main"
               debug="true" source="1.5">
            <src path="${src-dir.main}"/>
        </javac>
        <javac destdir="${build-dir.unit-test}" classpathref="cp.unit-test"
               debug="true" source="1.5">
            <src path="${src-dir.unit-test}"/>
        </javac>
    </target>

    <target name="war" description="Create WAR for caAERS" depends="compile">
        <echo>Creating ${war-name}</echo>
        <war destfile="${war-name}" basedir="src/main/webapp" webxml="src/main/webapp/WEB-INF/web.xml">
            <exclude name="**/web.xml"/>
            <!-- it would be better to do this with CP refs, but I don't see a way -->
            <lib dir="lib/main">
                <include name="**/*.jar"/>
            </lib>
            <lib dir="../core/lib/main">
                <include name="**/*.jar"/>
            </lib>
            <lib dir="../core/db/lib">
                <include name="**/*.jar"/>
            </lib>
            <lib dir="../core/tools/csm/lib">
                <include name="**/*.jar"/>
            </lib>
            <lib dir="../.." includes="caaers-core.jar"/>
            <classes dir="${build-dir.main}"/>
        </war>
    </target>
    
    <!-- TEST TARGETS -->

    <target name="test.unit.select-all">
        <property name="unit-test.pattern" value="**/*Test.java"/>
    </target>

    <target name="test" description="Run unit tests" depends="compile, test.unit.select-all">
        <echo>Executing unit tests: ${unit-test.pattern}</echo>

        <mkdir dir="${build-dir.unit-test}/junit"/>
        <junit printsummary="yes" haltonfailure="${test.failfast}" failureproperty="test.unit.failed" fork="true" forkmode="once" dir="${basedir}">
            <classpath>
                <path refid="cp.unit-test"/>
            </classpath>
            <jvmarg value="-Djava.awt.headless=true"/>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${build-dir.unit-test}/junit">
                <fileset dir="${src-dir.unit-test}">
                    <include name="${unit-test.pattern}"/>
                </fileset>
            </batchtest>
        </junit>

        <fail if="test.unit.failed">One or more unit tests failed.  See above or set test.failfast=true.</fail>
    </target>    
	<target name="test.unit.report">
	            <!-- junitreport -->
	            <junitreport todir="${build-dir.unit-test}/junit">
	                <fileset dir="${build-dir.unit-test}/junit">
	                    <include name="TEST-*.xml"/>
	                </fileset>
	                <report format="frames" todir="${build-dir.unit-test}/junit/summary"/>
	                <report format="noframes" todir="${build-dir.unit-test}/junit/summary"/>
	            </junitreport>

	            <!-- junitdocreport -->
	            <taskdef name="junitDocReport" classname="edu.duke.cabig.catrip.test.report.ant.JUnitDocReport">
	                 <classpath>
	                    <path refid="cp.unit-test"/>
	                </classpath>
	            </taskdef>

	            <junitDocReport format="html" useTestType="true" destfile="${build-dir.unit-test}/junit/summary/junitDocReport.html">
	                <junitResults>
	                    <fileset dir="${build-dir.unit-test}/junit">
	                        <include name="*.xml"/>
	                    </fileset>
	                </junitResults>
	                <junitDocs>
	                    <fileset dir="${src-dir.unit-test}">
	                        <include name="${unit-test.pattern}"/>
	                    </fileset>
	                </junitDocs>
	            </junitDocReport>
	        </target>

	        <target name="reports" depends="test.unit.report"/>

    <!-- TOMCAT DEPLOYMENT -->

    <target name="webapp" description="Merge created application into deployment directory" depends="compile, webapp.main"/>

    <target name="webapp.main" description="Copy basic webapp only, without recompiling">
        <!-- basic application - just copy from web directory -->
        <copy todir="${build-dir.webapp}">
            <fileset dir="src/main/webapp">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${build-dir.webapp}/WEB-INF/classes">
            <fileset dir="${build-dir.main}">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${build-dir.webapp}/WEB-INF/lib">
            <fileset dir="../core/lib/main">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="../core/db/lib">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="../..">
                <include name="caaers-core.jar"/>
            </fileset>
            <fileset dir="lib/main">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="webapp.create-context" depends="tomcat.init">
        <property name="webapp.context.docBase" value="${basedir}/${build-dir.webapp}"/>
        <echo file="${webapp.context-file}"><![CDATA[
            <Context path="${tomcat.deploy-path}" docBase="${webapp.context.docBase}" debug="9">
              <!--Realm className="org.apache.catalina.realm.JAASRealm" appName="caaers"
                        userClassNames="gov.nih.nci.security.authorization.domainobjects.User"
                        roleClassNames="gov.nih.nci.security.authorization.domainobjects.Role"/-->
            </Context>
        ]]></echo>
    </target>

    <target name="tomcat.init" depends="webapp">
        <property name="tomcat.config-file" value="tools/tomcat/tomcat.properties"/>
        <fail message="Tomcat manager not configured (could not read ${tomcat.config-file}).">
            <condition>
                <not><available file="${tomcat.config-file}"/></not>
            </condition>
        </fail>
        <property file="${tomcat.config-file}"/>

        <property name="webapp.context-file" value="${basedir}/tools/tomcat/context.xml"/>

        <taskdef file="tools/tomcat/tomcatTasks.properties">
            <classpath>
                <path refid="cp.tomcat.common"/>
                <path refid="cp.tomcat.server"/>
            </classpath>
        </taskdef>
    </target>

    <target name="tomcat.deploy" depends="tomcat.init, webapp.create-context"
            description="Deploy to local Tomcat install for development">
        <deploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            config="${webapp.context-file}"
            path="${tomcat.deploy-path}"
            />
    </target>

    <target name="tomcat.undeploy" depends="tomcat.init" description="Remove from local Tomcat install">
        <undeploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="${tomcat.deploy-path}"
            />
    </target>

    <target name="tomcat.redeploy" depends="tomcat.undeploy, tomcat.deploy"
            description="Replace application in local Tomcat install (required for some configuration changes)"/>

    <target name="tomcat.reload" depends="tomcat.init" description="Reload running application instance">
        <reload url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="${tomcat.deploy-path}"
            />
    </target>

    <target name="tomcat.start" depends="tomcat.init" description="Start previously deployed instance">
        <start url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="${tomcat.deploy-path}"
            />
    </target>

    <target name="tomcat.stop" depends="tomcat.init" description="Stop running instance">
        <stop url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="${tomcat.deploy-path}"
            />
    </target>

    <target name="tomcat.list" depends="tomcat.init">
        <list url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            />
    </target>

</project>