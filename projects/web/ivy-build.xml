
<project name="caaers-web" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="parent.dir" value="${basedir}/.." />
	<property file="${parent.dir}/build.properties" />
	
	<!-- Logic that finds the conf to be used while making war -->
	<condition property="webConf" value="distGrid" else="dist">
		<istrue value="${cctsWAR}"/>
	</condition>
	
	<import file="${parent.dir}/common.xml"/>
	
	

	<!-- ==============================================================
		target: resolve-dist
	================================================================== -->
	 <target name="resolve-dist" depends="load-ivy"
	    	description="--> resolve and retrieve dist conf dependencies with ivy">
	    	<echo message="Executing ${ant.project.name} : resolve-dist on conf : ${webConf}" />
	 		<ivy:resolve file="${ivy.file}" conf="${webConf}" haltonfailure="false" settingsRef="caaers.ivy.instance"/>
	 		<ivy:retrieve pattern="${war.dir}/WEB-INF/lib/[artifact]-[revision].[ext]"  haltonfailure="false" settingsRef="caaers.ivy.instance"/>
	  </target>
	
	<!-- ==================================================================
		target: init-war
	======================================================================= -->
	<target name="init-war" description="creates the directories necessary for the exploded war">
	 	<mkdir dir="${war.dir}"/>
	 	<mkdir dir="${war.dir}/WEB-INF" />
	 	<mkdir dir="${war.dir}/WEB-INF/lib"/>
	 	<mkdir dir="${war.dir}/WEB-INF/classes" />
	</target>
	 	
	<!-- =========================================================
		target: clean-war 
			Cleans the directory associated to keep exploded caaers files
	=============================================================-->
	 <target name="clean-war">
	 	<delete dir="${dist.dir}/${war.filename}" />
	 	<deltree dir="${war.dir}" />
	 </target>	
	 
	 	
	 <target name="war" depends="clean-war, init-war, resolve-dist">
		<copy-resources src="${classes.dir}" dest="${war.dir}/WEB-INF/classes" filter="false"/>
	 	<copy-resources src="${main.src}/../webapp" dest="${war.dir}"  filter="false" />
	 	
	 	<war destfile="${dist.dir}/${war.filename}" basedir="${war.dir}"
	 		webxml="${main.src}/../webapp/WEB-INF/web.xml">	 		
	 	</war>
	 	
	 	<!--
		<war destfile="${dist.dir}/caaers.war"  basedir="${main.src}/../webapp" 
			 webxml="${main.src}/../webapp/WEB-INF/web.xml">
			<lib dir="${lib.dir}" />
			<classes dir="${classes.dir}"  />
		</war>
		-->
	</target>
	<!-- =================================================================
		target : jar
			In addition to the jar responsibility, this will also invoke war
	======================================================================-->
	<target name="jar" depends="common.jar, war">
			<echo message="Executing jar in ${ant.project.name}" />
	</target>
	<target name="clean" depends="common.clean, clean-war"></target>

</project>
