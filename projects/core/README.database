DATABASE CONFIGURATION (for developers) 
======================
This doc describes the database configuration system for caAERS.  This system
defers most database configuration determinations until the application is
deployed, but lets developers easily switch between multiple configurations
when building and testing database-dependent code.

WHERE IS IT?
============
caAERS configures its database access at runtime from a simple properties 
file.  The file is named datasource.properties by default.  caAERS looks for
it in the following locations, using the first copy it finds:

- ${catalina.home}/conf/caaers
- ${user.home}/.caaers
- /etc/caaers

You can tell a particular caaers-core build to use a different filename by
passing the "db" property when building.  E.g., if you say

 [core] $ mvn -Ddb=hsqldb test

caAERS will look for a file called hsqldb.properties.

WHAT ARE THE PROPERTIES?
========================
You need to include the following properties for each datasource 
configuration:

- datasource.url
- datasource.driver
- datasource.username
- datasource.password

N.b.: you no longer need to specify the dialects for hibernate or bering --
they are automatically determined.  You can specify them if you want to -- use
the properties hibernate.dialect and bering.dialect, respectively.

There are examples for copy-and-pasting at the end of this doc.

Installation considerations
---------------------------
Recall that when you build from a parallel subproject, maven will use the 
version of the core JAR which is installed in your local repository.  So if
you want to deploy the webapp (for instance) using your "postgresql" profile,
be sure to install from core with it selected.  
 
Since the database you are deploying against is probably _not_ your unit test
database, you'll want to disable unit tests when doing the install.  You can 
do this by including

 maven.test.skip=true

in the datasource.properties for your deployment database.  Of course, you can
also always disable tests per build if you prefer:

 [core] $ mvn -Ddb=postgresql -Dmaven.test.skip=true install

If you don't disable tests, maven will clobber your deployment test data when 
it runs the tests as part of the install phase.

Running migrations
------------------
Most of the time, the maven plugin that finds the database properties and
makes them available to the build will automatically be invoked.  
Unfortunately, when running another stand-alone plugin, it isn't.  This means
that you'll need to do:

 [core] $ mvn initialize bering:migrate

to make sure you are hitting the correct database when you run the migrations.

JNDI
====
Developers will always need to use the property files described above for
building and testing the core module.  However, when you are deploying the
application, you also have the option of using a JNDI-configured datasource.

If there's a JNDI context available, caAERS will look for a data source named
java:/comp/env/caaers/db/datasource.  This name may be changed when core is 
built in the same way that the property file name is changed; e.g., if you 
build core like so:

 [core] $ mvn -Ddb=oracle install

the resulting application will look for java:/comp/env/caaers/db/oracle.  
(Renaming this way option would probably only be useful if you were hosting 
multiple caAERS instances in the same application container.)

Note: if you are using PostgreSQL configured through JNDI you will still need
a datasource.properties file.  It should include this line:

datasource.rdbms=postgresql

(It may contain other datasource configuration information, but it will be 
ignored.)

EXAMPLES
========

PostgreSQL
----------
datasource.url=jdbc:postgresql:caaers
datasource.driver=org.postgresql.Driver
datasource.username=whomever
datasource.password=whatever

Oracle
------
datasource.url=jdbc:oracle:thin:@host:port:service
datasource.driver=oracle.jdbc.OracleDriver
datasource.username=whomever
datasource.password=whatever

HSQLDB (for testing)
------
# You need to replace CAAERS_WC with your actual working copy directory
datasource.url=jdbc:hsqldb:file:CAAERS_WC/projects/core/target/hsqldb/test
datasource.driver=org.hsqldb.jdbcDriver
datasource.username=sa
datasource.password=

