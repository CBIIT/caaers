<?xml version="1.0" encoding="UTF-8"?>
<package  name="gov.nih.nci.cabig.caaers.rules.reporting_study_interventions"  xmlns="http://drools.org/drools-4.0" xmlns:drools="http://drools.org/drools-4.0" xmlns:rules="http://drools.org/drools-4.0" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:schemaLocation="http://drools.org/drools-4.0 drools-4.0.xsd">

    <import name="java.util.List"/>
    <import name="java.util.HashSet"/>
    <import name="com.semanticbits.rules.utils.DateUtil"/>
    <import name="com.semanticbits.rules.utils.NumberUtil"/>
    <import name="org.apache.commons.lang.StringUtils"/>

    <import name="gov.nih.nci.cabig.caaers.domain.*"/>
	<import name="gov.nih.nci.cabig.caaers.validation.*" />
	<import name="com.semanticbits.rules.objectgraph.NullSafeFieldExtractor" />
	<import name="gov.nih.nci.cabig.caaers.rules.runtime.ExpeditedAdverseEventValidator" />
	
	<global type="com.semanticbits.rules.impl.RuleContext" identifier="ruleContext"/>
	<global type="com.semanticbits.rules.runtime.action.ActionDispatcher" identifier="actionDispatcher"/>
	
	<!-- ==========================================================================
	RuleName : SEC_BR1_CHK
	Rule : Either Course Information and/or Radiation Intervention must be provided for AGENTS + RADIATION pathways
	Error Code : SEC_BR1_ERR
	Error Message :  Either COURSE_INFORMATION and/or RADIATION_INTERVENTION must be provided.
	============================================================================= -->
	<rule name="SEC_BR1_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>!(aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DRUG_ADMINISTRATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY))</eval>
			<eval>aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DRUG_ADMINISTRATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION)</eval>
			
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.firstCourseDate") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.date") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.number") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.totalCourses") == null</eval>
		
			
			<eval>aeReport.getRadiationInterventions().size()  &lt; 1</eval>
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR1_ERR","Either Course Information and/or Radiation Intervention must be provided for AGENTS + RADIATION pathways");
       	</rhs>
	</rule>
	
	<!-- ==========================================================================
	RuleName : SEC_BR2_CHK
	Rule : Either Course Information and/or Surgery Intervention must be provided for AGENTS + SURGERY pathways
	Error Code : SEC_BR2_ERR
	Error Message : Either COURSE_INFORMATION and/or SURGERY_INTERVENTION must be provided.
	============================================================================= -->
	<rule name="SEC_BR2_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>!(aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DRUG_ADMINISTRATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY))</eval>
			<eval>aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DRUG_ADMINISTRATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY)</eval>
			
			<eval>aeReport.getSurgeryInterventions().size() &lt; 1</eval>
				
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.firstCourseDate") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.date") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.number") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.totalCourses") == null</eval>
		
			
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR2_ERR","Either Course Information and/or Surgery Intervention must be provided for AGENTS + SURGERY pathways");
       	</rhs>
	</rule>
	
	<!-- ==========================================================================
	RuleName : SEC_BR3_CHK
	Rule : Either Surgery Intervention and/or Radiation Intervention must be provided for SURGERY + RADIATION pathways
	Error Code : SEC_BR3_ERR
	Error Message :  Either SURGERY_INTERVENTION and/or RADIATION_INTERVENTION must be provided.
	============================================================================= -->
	<rule name="SEC_BR3_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>!(aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DRUG_ADMINISTRATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY))</eval>
			<eval>aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY)</eval>
			<eval>( 
					(aeReport.getSurgeryInterventions().size() &lt; 1) 
					&amp;&amp; 
			  		(aeReport.getRadiationInterventions().size()  &lt; 1) 
			      )</eval>
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR3_ERR","Either Surgery Intervention and/or Radiation Intervention must be provided for SURGERY + RADIATION pathways");
       	</rhs>
	</rule>
	<!-- ==========================================================================
	RuleName : SEC_BR4_CHK
	Rule : Either Course Information and/or Surgery Intervention and/or Radiation Intervention must be provided for AGENTS + SURGERY + RADIATION pathways
	Error Code : SEC_BR4_ERR
	Error Message : Either COURSE_INFORMATION and/or RADIATION_INTERVENTION and/or SURGERY_INTERVENTION must be provided.
	============================================================================= -->
	<rule name="SEC_BR4_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DRUG_ADMINISTRATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION) &amp;&amp; aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY)</eval>
			<eval>aeReport.getRadiationInterventions().size()  &lt; 1</eval>
			<eval>aeReport.getSurgeryInterventions().size() &lt; 1</eval>	
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.firstCourseDate") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.date") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.number") == null</eval>
			<eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.totalCourses") == null</eval>
		
			
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR4_ERR","Either Course Information and/or Surgery Intervention and/or Radiation Intervention must be provided for AGENTS + SURGERY + RADIATION pathways");
       	</rhs>
	</rule>
	<!-- ==========================================================================
	RuleName : SEC_BR50_CHK
	Rule : Surgery intervention must not be provided for non SURGERY pathways
	Error Code : SEC_BR50_ERR
	Error Message : Surgery intervention must not be provided since the study you selected does not involve a SURGERY
	============================================================================= -->
	<rule name="SEC_BR50_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>!aeReport.getStudy().hasTherapyOfType(StudyTherapyType.SURGERY)</eval>
			<eval>aeReport.getSurgeryInterventions().size() &gt; 0</eval>	
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR50_ERR","Surgery intervention must not be provided since the study you selected does not involve a SURGERY");
       	</rhs>
	</rule>	
	<!-- ==========================================================================
	RuleName : SEC_BR51_CHK
	Rule : Radiation intervention must not be provided for non RADIATION pathways
	Error Code : SEC_BR51_ERR
	Error Message : Radiation intervention must not be provided must not be provided since the study you selected does not involve RADIATION therapy.
	============================================================================= -->
	<rule name="SEC_BR51_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>!aeReport.getStudy().hasTherapyOfType(StudyTherapyType.RADIATION)</eval>
			<eval>aeReport.getRadiationInterventions().size() &gt; 0</eval>	
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR51_ERR","Radiation intervention must not be provided since the study you selected does not involve a RADIATION");
       	</rhs>
	</rule>		

	<!-- ==========================================================================
	RuleName : SEC_BR53_CHK
	Rule : Medical Device information must not be provided for non DEVICE pathways 
	Error Code : SEC_BR53_ERR
	Error Message : Medical Device information must not be provided for must not be provided since the study you selected does not involve a DEVICE. 
	============================================================================= -->
	<rule name="SEC_BR53_CHK">
		<lhs>
			<pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
			<pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
			<eval>!aeReport.getStudy().hasTherapyOfType(StudyTherapyType.DEVICE)</eval>
			<eval>aeReport.getMedicalDevices().size() &gt; 0</eval>	
		</lhs>
		<rhs>
			<!-- Populate Error Message-->
			errors.addValidationError("SEC_BR53_ERR","Medical Device information must not be provided since the study you selected does not involve a DEVICE");
       	</rhs>
	</rule>		

    <!-- ==========================================================================
        RuleName : PAG_UK_CHK
        Rule : Protocol Agents must be unique"
        Error Code : PAG_UK_ERR
        Error Message : PROTOCOL_AGENT must be unique
        ============================================================================= -->
        <rule name="PAG_UK_CHK">
            <lhs>
                <pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
                <pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
                <eval>new ExpeditedAdverseEventValidator(){ 
                	public boolean validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                    	TreatmentInformation ti = aeReport.getTreatmentInformation(); 
                    	if(ti == null) return SUCCESS; 
                    	if(ti.getCourseAgents() == null) return SUCCESS; 
                    	int i = 0; 
                    	HashSet hSet = new HashSet(); 
                    	for(CourseAgent ca : ti.getCourseAgents()){ 
                    		i++;
                    		if(ca.getStudyAgent() == null) continue;
                    		
                    		if(!hSet.add(ca.getStudyAgent().getId())){ 
                    			errors.addValidationError("PAG_UK_ERR", "Protocol Agents must be unique", 
                    					i,ca.getStudyAgent().getAgentName() ); 
                    		} 
                    	} 
                    	return errors.hasErrors() ? FAIL : SUCCESS; 
                    } 
                }.validate(aeReport, errors)
               </eval>
            </lhs>
            <rhs>
                <!--  Error message is already populated -->
            </rhs>
        </rule>

    <!-- ==========================================================================
    RuleName : PAG_BR3_CHK
    Rule : 'Date Last Administered' must be provided for an investigational agent."
    Error Code : PAG_BR3_ERR
    Error Message : LAST_ADMINISTERED_DATE must be entered for an investigational agent.
    ============================================================================= -->
    <rule name="PAG_BR3_CHK">
        <lhs>
            <pattern identifier="aeReport"
                object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++;
                if(ca.getStudyAgent() == null) continue;
                if(ca.getStudyAgent().getInvestigationalNewDrugIndicator() &amp;&amp;
                ca.getLastAdministeredDate() == null){ errors.addValidationError("PAG_BR3_ERR",
                "'Date Last Administered' must be provided for an investigational agent.",i); } }
                return errors.hasErrors() ? FAIL : SUCCESS; } }.validate(aeReport, errors)</eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>

    <!-- ==========================================================================
    RuleName : PAG_BR2B_CHK
    Rule : "'Unit of measure'  must be provided if 'Total dose administered this course' is provided.
    Error Code : PAG_BR2B_ERR
    Error Message : DELAY_UOM must be provided if the Total dose administered this course is provided
    ============================================================================= -->
    <rule name="PAG_BR2B_CHK">
        <lhs>
            <pattern identifier="aeReport"
                object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++; 
                if(ca.getStudyAgent() == null) continue;
                if(ca.getDose().getAmount() != null
                &amp;&amp; StringUtils.isEmpty(ca.getDose().getUnits()) ){
                    errors.addValidationError("PAG_BR2B_ERR", "'Unit of measure' must be provided if 'Total dose administered this course' is provided",i);
                     } } return errors.hasErrors() ? FAIL : SUCCESS;
                } }.validate(aeReport, errors)</eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>

    <!-- ===== REPORT LEVEL RULE ====================================================
    RuleName : SEC_BR5B_CHK
    Rule : Protocol agents must be not be provided if Course Information has not been provided.
    Error Code : SEC_BR5A_ERR
    Error Message : PROTOCOL_AGENTS must not be provided if COURSE_INFOMATION is not provided.
    ============================================================================= -->
    <rule name="SEC_BR5B_CHK">
        <rule-attribute name="no-loop" value="true"/>
        <lhs>
            <pattern identifier="aeReport"
                object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.firstCourseDate")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.date")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.number")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.totalCourses")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractFieldLength(aeReport,"treatmentInformation.courseAgents")
                &gt; 0</eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message--> errors.addValidationError("SEC_BR5B_ERR","'Protocol
            agents' must be not be provided if 'Course Information' has not been provided"); </rhs>
    </rule>
    
</package>	