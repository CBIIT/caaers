<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">


	<bean id="csmAuthorizationDao"
		class="gov.nih.nci.security.dao.DIAuthorizationDao"
		init-method="init">
		<property name="sessionFactory">
			<bean
				class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
				<property name="dataSource" ref="dataSource" />
				<property name="mappingResources">
					<list>
						<value>
							gov/nih/nci/security/authorization/domainobjects/Privilege.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/Application.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/Role.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/dao/hibernate/RolePrivilege.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/dao/hibernate/UserGroup.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/dao/hibernate/ProtectionGroupProtectionElement.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/Group.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/User.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/ProtectionGroup.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/ProtectionElement.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/UserGroupRoleProtectionGroup.hbm.xml
						</value>
						<value>
							gov/nih/nci/security/authorization/domainobjects/UserProtectionElement.hbm.xml
						</value>
					</list>
				</property>
				<property name="hibernateProperties">
                    <bean class="gov.nih.nci.cabig.caaers.tools.spring.HibernatePropertiesFactoryBean">
                        <property name="dialectName"><value>s[hibernate.dialect]</value></property>
                    </bean>
				</property>
			</bean>
		</property>
		<property name="applicationContextName" value="caaers" />
	</bean>

<!-- 
						hibernate.c3p0.min_size=5
						hibernate.c3p0.max_size=20
						hibernate.c3p0.timeout=300
						hibernate.c3p0.max_statements=50
						hibernate.c3p0.idle_test_period=3000
 -->

	<bean id="csmUserProvisioningManager"
		class="gov.nih.nci.security.provisioning.UserProvisioningManagerImpl">
		<property name="authorizationDAO" ref="csmAuthorizationDao" />
	</bean>

<!-- 
 	<bean id="csmUserProvisioningManager"
		class="gov.nih.nci.security.acegi.csm.authorization.UserProvisioningManagerFactory"
		factory-method="newUserProvisioningManager">
		<constructor-arg value="caaers" />
		<constructor-arg>
			<map>
				<entry>
					<key>
						<value>hibernate.connection.url</value>
					</key>
					<value>${datasource.url}</value>
				</entry>
				<entry>
					<key>
						<value>hibernate.connection.username</value>
					</key>
					<value>${datasource.username}</value>
				</entry>
				<entry>
					<key>
						<value>hibernate.connection.password</value>
					</key>
					<value>${datasource.password}</value>
				</entry>
				<entry>
					<key>
						<value>hibernate.dialect</value>
					</key>
					<value>${datasource.dialect}</value>
				</entry>
				<entry>
					<key>
						<value>hibernate.connection.driver_class</value>
					</key>
					<value>${datasource.driver}</value>
				</entry>
			</map>
		</constructor-arg>
	</bean>

 -->
	<bean id="csmAuthenticationManager"
		class="gov.nih.nci.security.SecurityServiceProvider"
		factory-method="getAuthenticationManager">
		<constructor-arg value="caaers" />
	</bean>

	<bean id="csmObjectIdGenerator"
		class="gov.nih.nci.security.acegi.csm.authorization.BasicCSMObjectIdGenerator">
		<property name="idMethodName" value="getId" />
		<property name="classNameFirst" value="true" />
		<property name="separator" value=":" />
	</bean>

	<bean id="csmExtentIdGenerator"
		class="gov.nih.nci.security.acegi.csm.authorization.BasicCSMObjectIdGenerator" />
		
	<aop:aspectj-autoproxy />
	<aop:spring-configured/>
		
	<aop:config>
		<!-- pointcuts -->
		<!-- Unfortunately, Spring doesn't support cflow
			TODO: consider using AspectJ compile-time weaving to make use of more powerver pointcut expressions
		<aop:pointcut id="daoSaveOrUpdatePointcut"
			expression="(execution(public void gov.nih.nci.cabig.caaers.dao.CaaersDao+.save(gov.nih.nci.cabig.caaers.domain.AbstractDomainObject+)) || execution(public void gov.nih.nci.cabig.caaers.dao.CaaersDao+.merge(gov.nih.nci.cabig.caaers.domain.AbstractDomainObject+))) &amp;&amp; !cflow(call(public void gov.nih.nci.cabig.caaers.DaoTestCase+.test*()))"/>
			 -->
		<aop:pointcut id="daoSaveOrUpdatePointcut"
			expression="execution(public void gov.nih.nci.cabig.caaers.dao.CaaersDao+.save(gov.nih.nci.cabig.caaers.domain.AbstractDomainObject+)) || execution(public void gov.nih.nci.cabig.caaers.dao.CaaersDao+.merge(gov.nih.nci.cabig.caaers.domain.AbstractDomainObject+))"/>			 
			
			
		<!-- advisors -->
		

		<!-- aspects -->
		<!-- 
		<aop:aspect id="assignDomainObjectOwnershipAspect"
			ref="assignDomainObjectOwnershipBean">
			<aop:after-returning 
				pointcut-ref="daoSaveOrUpdatePointcut"
				method="assignOwner"
				returning="domainObject" />
		</aop:aspect>
		 -->

		<aop:aspect id="studySecurityInterceptorAspect" ref="studySecurityInterceptorAspectBean">
			<aop:around 
      			pointcut-ref="daoSaveOrUpdatePointcut"
      			method="advise"/>		
		</aop:aspect>
		<aop:aspect id="participantSecurityInterceptorAspect" ref="participantSecurityInterceptorAspectBean">
			<aop:around 
      			pointcut-ref="daoSaveOrUpdatePointcut"
      			method="advise"/>		
		</aop:aspect>

		
	</aop:config>
	
	<!-- 
	<bean id="assignDomainObjectOwnershipBean" class="gov.nih.nci.cabig.caaers.security.CaaersDomainObjectOwnershipAssigner">
		<property name="csmAuthorizationManager" ref="csmUserProvisioningManager"/>
	</bean>
	-->
	
	
	<bean id="studySecurityInterceptorAspectBean" class="gov.nih.nci.security.acegi.csm.aop.SecurityInterceptorAspect">
		<property name="securityInterceptor" ref="studyDaoSecurity"/>
	</bean>
	
	<bean id="participantSecurityInterceptorAspectBean" class="gov.nih.nci.security.acegi.csm.aop.SecurityInterceptorAspect">
		<property name="securityInterceptor" ref="participantDaoSecurity"/>
	</bean>
	

	<bean id="daoSecurityTemplate" abstract="true">

		<property name="authenticationManager"
			ref="authenticationManager" />

	</bean>

	<bean id="studyDaoSecurity" parent="daoSecurityTemplate"
		class="org.acegisecurity.intercept.method.aspectj.AspectJSecurityInterceptor">
		<property name="objectDefinitionSource">
		<!-- 
			<value>
				gov.nih.nci.cabig.caaers.dao.StudyDao.save=CSM_STUDY_CREATE
				gov.nih.nci.cabig.caaers.dao.StudyDao.merge=CSM_STUDY_UPDATE
			</value>
			 -->
			<value>
				gov.nih.nci.cabig.caaers.dao.StudyDao.save=ROLE_caaers_super_user,ROLE_caaers_study_cd
				gov.nih.nci.cabig.caaers.dao.StudyDao.merge=ROLE_caaers_super_user,ROLE_caaers_study_cd
			</value>			 
		</property>
		<property name="accessDecisionManager">

			<bean class="org.acegisecurity.vote.AffirmativeBased">
				<property name="allowIfAllAbstainDecisions">
					<value>false</value>
				</property>
				<property name="decisionVoters">
					<list>
						<bean class="org.acegisecurity.vote.RoleVoter" />

						<!--============== BEGIN STUDY CREATE ================-->
						<!-- 
						<bean
							class="gov.nih.nci.security.acegi.csm.vote.CSMBasicAccessDecisionVoter">

							<property name="processDomainObjectClass"
								value="gov.nih.nci.cabig.caaers.domain.Study" />
							<property name="processConfigAttribute"
								value="CSM_STUDY_CREATE" />
							<property name="authorizationCheck">
								<bean
									class="gov.nih.nci.security.acegi.csm.authorization.CSMGroupAuthorizationCheck">
									<property
										name="csmUserProvisioningManager"
										ref="csmUserProvisioningManager" />
									<property name="requiredPermission"
										value="CREATE" />
									<property name="objectIdGenerator"
										ref="csmExtentIdGenerator" />
								</bean>
							</property>

						</bean>
						 -->
						<!--============== END STUDY CREATE ================-->
						
						<!--============== BEGIN STUDY UPDATE ================-->
						<!-- 
						<bean
							class="gov.nih.nci.security.acegi.csm.vote.CSMBasicAccessDecisionVoter">

							<property name="processDomainObjectClass"
								value="gov.nih.nci.cabig.caaers.domain.Study" />
							<property name="processConfigAttribute"
								value="CSM_STUDY_UPDATE" />
							<property name="authorizationCheck">
								<bean
									class="gov.nih.nci.security.acegi.csm.authorization.CSMGroupAuthorizationCheck">
									<property
										name="csmUserProvisioningManager"
										ref="csmUserProvisioningManager" />
									<property name="requiredPermission"
										value="UPDATE" />
									<property name="objectIdGenerator"
										ref="csmExtentIdGenerator" />
								</bean>
							</property>

						</bean>
						 -->
						<!--============== END STUDY UPDATE ================-->						
						
					</list>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="participantDaoSecurity" parent="daoSecurityTemplate"
		class="org.acegisecurity.intercept.method.aspectj.AspectJSecurityInterceptor">
		<property name="objectDefinitionSource">
			<value>
				gov.nih.nci.cabig.caaers.dao.ParticipantDao.save=ROLE_caaers_super_user,ROLE_caaers_participant_cd
				gov.nih.nci.cabig.caaers.domain.StudyParticipantAssignment.setParticipant=ROLE_caaers_super_user,ROLE_caaers_participant_cd
				gov.nih.nci.cabig.caaers.dao.AdverseEventReportDao.save=ROLE_caaers_super_user,ROLE_caaers_participant_cd
			</value>
		</property>
		<property name="accessDecisionManager">
			<bean class="org.acegisecurity.vote.AffirmativeBased">
				<property name="allowIfAllAbstainDecisions">
					<value>false</value>
				</property>
				<property name="decisionVoters">
					<list>
						<bean class="org.acegisecurity.vote.RoleVoter" />
					</list>
				</property>
			</bean>
		</property>
	</bean>	
	
	<bean id="studyParticipantAssignmentAspect"
		class="gov.nih.nci.cabig.caaers.security.StudyParticipantAssignmentAspect"
		factory-method="aspectOf">
		
		<property name="securityInterceptor" ref="participantDaoSecurity"/>
		
	</bean>

</beans>