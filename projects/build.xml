
<project name="all"  xmlns:ivy="antlib:org.apache.ivy.ant">
    <property file="build.properties" />
    <import file="${basedir}/common.xml"/>
	
	<!-- ==================================================================
		target : buildlist
	====================================================================== -->
  	<target name="buildlist" depends="load-ivy" unless="buildlist.done" description="Will find the correct order of build dependency"> 
    	<ivy:buildlist reference="build-path">
    		
    		<fileset file="${basedir}/bootstrap/ivy-build.xml" />
    		<fileset file="${basedir}/core/ivy-build.xml" />
    		<fileset file="${basedir}/rules/ivy-build.xml" />
    		<fileset file="${basedir}/web/ivy-build.xml" />
    		
    		<fileset file="${basedir}/excelstudyloader/ivy-build.xml">
    			<include name="include"/>
    			<exclude name="exclude"/>
			</fileset>

    		<fileset file="${basedir}/grid/registration-consumer/ivy-build.xml" />
    		<fileset file="${basedir}/grid/study-consumer/ivy-build.xml" />
    		 <fileset file="${basedir}/grid/introduce/AdverseEventConsumerService1.2/ivy-build.xml" /> 

    	</ivy:buildlist>
  		<property name="buildlist.done" value="true" />
  		<echo message="buildList : ${build-path}" />
  	</target>
	
	<!-- ==================================================================
		target : publish-all
	====================================================================== -->
  	<target name="publish-all" depends="buildlist, clean-all, clean-repo" 
  			description="compile, jar and publish all projects in the right order, publishes them into local repository">
   		 <subant target="publish-local" buildpathref="build-path" />
  	</target>
	
	<!-- ==================================================================
		target : release-all
	====================================================================== -->
	<target name="release-all" depends="buildlist, clean-all" 
	  			description="compile, jar and publish all projects in the right order, then releases it to Shared Repository">
	   	<subant target="publish" buildpathref="build-path" />
	</target>
	
	<!-- ==================================================================
		target : resolve-all
	====================================================================== -->
   <target name="resolve-all" depends="buildlist" 
   		description="Will call the resolve target on each of the module">
   		<subant target="resolve" buildpathref="build-path" />
   </target>
	
	<!-- ==================================================================
		target : clean-all
	====================================================================== -->
  <target name="clean-all" depends="buildlist, clean-pmd" description="clean all projects">
    <subant target="clean" buildpathref="build-path" />
  </target>
	
	<!-- ==================================================================
		target : clean
	====================================================================== -->
  <target name="clean" depends="clean-all, clean-repo" 
  			description="clean delete repository, and all projects" />
	
	<target name="clean-repo" description="cleans the local repository">
		<delete dir="${local.repo.dir}"/>
	</target>

	<!-- ==================================================================
		target : clean-pmd
	====================================================================== -->
	<target name="clean-pmd" description="cleans the pmd report directory ">
		<delete dir="${pmd.report.dir}"/>
	</target>
	
	<!-- ==================================================================
			target : clean-j2h
	====================================================================== -->
	<target name="clean-j2h" description="cleans the java2html directory ">
		<delete dir="${j2h.dir}"/>
	</target>
	
	<!-- ==================================================================
		target : clean-cache
	====================================================================== -->
	<target name="clean-cache" depends="load-ivy" description="Cleans the ivy cache">
		<ivy:cleancache/>
	</target>
	
	
	<!-- ==========================================================
		target : migrate
		This will delegate the call to caaers-core:migrate, this is added
		to do migrate and build as a single job using hudson. 
	=============================================================-->
	<target name="migrate">
		<subant target="migrate" buildpath="core/ivy-build.xml" />
	</target>

	<!-- ==========================================================
			target : insert-csm-policy
			This will delegate the call to caaers-insert-csm-policy
		=============================================================-->
	<target name="insert-csm-policy">
		<subant target="insert-csm-policy" buildpath="core/ivy-build.xml" />
	</target>
	
	<!--- =================================================================================
		target : javadoc
	======================================================================================= -->
    <target name="javadoc" description="Compile the Javadoc API documentation to javadoc dir">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc
        	classpathref="lib.path.id"
        	destdir="${javadoc.dir}"
        	use="true"
        	protected="true"
        	version="true"
        	windowtitle="caAERS API Documentation"
        	Overview="${javadoc.dir}/package.html"
        	doctitle="caAERS API Documentation"
        	link="${sun.javadoc.link}">
        	<packageset dir="${basedir}" defaultexcludes="yes" >
   				<include name="**/main/java/**/*"/>
		    </packageset>
        </javadoc>


    </target>
	

	
	<!-- =======================================================
		target : sync-classpath
	============================================================ -->
	<target name="sync-classpath" depends="buildlist">
		<mkdir dir="${user.home}/ivylibs" />
		<subant target="resolve" buildpathref="build-path">
			<property name="resolve.confs" value="runtime,test" />
			<property name="resolve.to.dir" value="${user.home}/ivylibs" />
		</subant>
		<taskdef name="eclipseClasspath" classname="com.semanticbits.ctms.ant.BuildPathGenerator">
		  <classpath>
		  	<path>
		  			<fileset dir="${user.home}/ivylibs">
		  				<include name="*.jar"/>
		  			</fileset>
		  	</path>
		  </classpath> 
		</taskdef> 
		
		<eclipseClasspath templatefile=".classpath.tmpl" destinationfile=".classpath" 
			srcpattern="src/main/java,src/main/resources,src/test/java,src/test/resources,build/generated-sources/xjc" 
			excludes="**/*caaers-*.jar" ivylibdir="${user.home}/ivylibs"
			modulerefs="build-path"	>
		</eclipseClasspath>
		
	</target>
	<!-- ================================= 
          target: report-all              
         ================================= -->
    <target name="report-all" depends="buildlist" description="--> Generate report of all the project dependencies">
    	<subant target="report" buildpathref="build-path" />
    </target>
	
	<!-- ============================================================================
		target: coverage-report
	================================================================================ -->
    <target name="coverage-report" depends="clean-cobertura-dir,load-ivy" description="--> Generates a combined Code coverage report">
    	<ivy:resolve inline="true" organisation="cobertura" module="cobertura" revision="1.8" />
    	<ivy:cachepath organisation="cobertura" module="cobertura" revision="1.8" inline="true" pathid="cobertura.classpath"/>
    	<mkdir dir="${cobertura.report.dir}" />
    	<taskdef  resource="tasks.properties" classpathref="cobertura.classpath" />
    	<cobertura-merge datafile="${cobertura.report.dir}/cobertura.ser">
    		<fileset dir="." includes="**/cobertura.ser" />
		</cobertura-merge>
    	<echo>================================================================</echo>
    	<echo>Code Coverage Report available at </echo>
    	<echo>${cobertura.report.dir}/index.html</echo>
    	<echo>================================================================</echo>
    	<cobertura-report format="html" destdir="${cobertura.report.dir}"  datafile="${cobertura.report.dir}/cobertura.ser" >
    	    <fileset dir=".">
    	        <include name="**/src/main/java/**/*.java" />
    	    </fileset>
    	</cobertura-report>
	</target>
	
	<!-- ===================================================================
		target : java2html
	====================================================================== -->
	<target name="java2html" depends="load-ivy, clean-j2h" description="--> Generates Html represenation of the source code">
		<ivy:resolve inline="true" organisation="java2html" module="j2h" revision="1.3.1" />
		<ivy:cachepath organisation="java2html" module="j2h" revision="1.3.1" inline="true" pathid="j2h.classpath"/>
		<mkdir dir="${j2h.dir}"/>
		<taskdef name="java2html" classname="com.java2html.Java2HTMLTask" classpathref="j2h.classpath"/>
		<java2html title="caAERS source code" 
				simple="no"
		           	tabsize="4"
				marginsize="2"
				header="true"
				footer="false"
				destination="${j2h.dir}">
				<fileset dir=".">
					<include name="**/*.java"/>
				</fileset>
			</java2html>
	</target>
	
	<!-- ================================================
	 	target: pmd-report
	===================================================== -->
	<target name="pmd-report" depends="load-ivy, java2html, clean-pmd" description="--> Generates the pmd report">
		<ivy:resolve inline="true" organisation="pmd" module="pmd" revision="4.2.1" />
		<ivy:cachepath organisation="pmd" module="pmd" revision="4.2.1" inline="true" pathid="pmd.classpath"/>
		<mkdir dir="${pmd.report.dir}"/>
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath"/>
		<pmd shortFilenames="true">
			  <ruleset>basic</ruleset>
			  <formatter type="html" toFile="${pmd.report.dir}\pmd_report.html" linkPrefix="../j2h/" />
			  <fileset dir="bootstrap/src/main/java">
			   	<include name="**/*.java"/>
			  </fileset>
			  <fileset dir="core/src/main/java">
			  	<include name="**/*.java"/>
			  </fileset>
			  <fileset dir="rules/src/main/java">
				<include name="**/*.java"/>
			  </fileset>
			  <fileset dir="web/src/main/java">
				<include name="**/*.java"/>
			  </fileset>
			  <fileset dir="jbi">
				<include name="**/*.java"/>
			  </fileset>
		</pmd>
	</target>
	<!-- ==========================================================
			target : recreate-db-hudson
			This will recreate the db in hudson
		=============================================================-->
		<target name="recreate-db-hudson">
			<subant target="recreate-db-hudson" buildpath="core/ivy-build.xml" />
		</target>
	<!-- ==========================================================
				target : drop-rules-tables
				drop the rules tables
	=============================================================-->
	<target name="drop-rules-tables" description="drop the rules tables">
				<subant target="drop-rules-tables" buildpath="core/ivy-build.xml" />
	</target>
	
	<!-- ==========================================================
				target : importexcel
				Used to import Study Data From an Excel Sheet.
	=============================================================-->
	
	<target name="importexcel">
		<subant target="importexcel" buildpath="excelstudyloader/ivy-build.xml" />
	</target>
	
	<!-- ==========================================================
		target : load-rules
		drop the rules tables
	=============================================================-->
	<target name="load-rules" description="Uses a test case class to load the rules">
		<subant target="load-rules" buildpath="rules/ivy-build.xml" />
	</target>
	
	<!-- ==========================================================
		target : set.review.reports
		This target is used to set run.review.reports=true
	=============================================================-->
    <target name="set-run-review-reports" description="--> This target is used to set run.review.reports=true">
    	<property name="skip.review.reports" value="false"/>
    </target>
	
	<!-- ==========================================================
		target : auto-build-ci
		This target is for Continious Integration useage.
		This target Cleans Relevant Folders , Recreate's the db in hudson
	=============================================================-->
    <target name="autobuild-ci" description="--> Tasks Related to Continious Integration"
    	depends="set-run-review-reports,debug-info,recreate-db-hudson,migrate,insert-csm-policy,clean,publish-all">
    </target>
	
</project>
