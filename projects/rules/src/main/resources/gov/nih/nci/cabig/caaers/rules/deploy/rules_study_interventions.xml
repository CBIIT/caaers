<?xml version="1.0" encoding="UTF-8"?>
<package name="gov.nih.nci.cabig.caaers.rules.reporting_treatment_info_section"
         xmlns="http://drools.org/drools-4.0" xmlns:drools="http://drools.org/drools-4.0"
         xmlns:rules="http://drools.org/drools-4.0" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
         xs:schemaLocation="http://drools.org/drools-4.0 drools-4.0.xsd">

    <import name="gov.nih.nci.cabig.caaers.domain.*"/>
    <import name="gov.nih.nci.cabig.caaers.validation.*"/>
    <import name="java.util.List"/>
    <import name="java.util.HashSet"/>
    <import name="gov.nih.nci.cabig.caaers.rules.common.DateUtil"/>
    <import name="gov.nih.nci.cabig.caaers.rules.objectgraph.NullSafeFieldExtractor"/>
    <import name="gov.nih.nci.cabig.caaers.rules.common.NumberUtil"/>
    <import name="gov.nih.nci.cabig.caaers.rules.runtime.ExpeditedAdverseEventValidator"/>
    <import name="org.apache.commons.lang.StringUtils"/>

    <global type="gov.nih.nci.cabig.caaers.rules.runtime.RuleContext" identifier="ruleContext"/>
    <global type="gov.nih.nci.cabig.caaers.rules.runtime.action.ActionDispatcher"
            identifier="actionDispatcher"/>

    <!-- ===== REPORT LEVEL RULE ====================================================
     RuleName : SEC_BR5B_CHK
     Rule : Protocol agents must be not be provided if Course Information has not been provided.
     Error Code : SEC_BR5A_ERR
     Error Message : PROTOCOL_AGENTS must not be provided if COURSE_INFOMATION is not provided.
     ============================================================================= -->
    <rule name="SEC_BR5B_CHK">
        <rule-attribute name="no-loop" value="true"/>
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.firstCourseDate")
                == null
            </eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.date")
                == null
            </eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.number")
                == null
            </eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.totalCourses")
                == null
            </eval>
            <eval>NullSafeFieldExtractor.extractFieldLength(aeReport,"treatmentInformation.courseAgents")
                &gt; 0
            </eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message--> errors.addValidationError("SEC_BR5B_ERR","'Protocol
            agents' must be not be provided if 'Course Information' has not been provided");
        </rhs>
    </rule>
    <!-- ==========================================================================
     RuleName : TAI_BR2_CHK
     Rule : Either and only “Treatment Assignment Code” or “Describe Treatment Assignment” must be provided
     Error Code : TAI_BR2_ERR
     Error Message : Either and only TREATMENT_ASSIGNMENT_CODE or OTHER_TREATMENT_ASSIGNMENT must be provided.
     ============================================================================= -->
    <rule name="TAI_BR2_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.treatmentAssignment")
                != null
            </eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.treatmentDescription")
                != null
            </eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message--> errors.addValidationError("TAI_BR2_ERR","Either and only
            'Treatment assignment code' or 'Description of treatment assignment or dose level' must
            be provided");
        </rhs>
    </rule>

    <!-- ==========================================================================
     RuleName : CIN_BR1_CHK
     Logic : Course Number of AE must not be greater than Total number of Courses.
     Error Code CIN_BR1_ERR
     Error Message : COURSE_NUMBER_OF_AE must not be greater than TOTAL_NUMBER_OF_COURSES
     ============================================================================= -->
    <rule name="CIN_BR1_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>
                NumberUtil.compare(NullSafeFieldExtractor.extractIntegerField(aeReport,"treatmentInformation.adverseEventCourse.number"),
                NullSafeFieldExtractor.extractIntegerField(aeReport,"treatmentInformation.totalCourses"))
                &lt; 0
            </eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message--> errors.addValidationError("CIN_BR1_ERR","'Course number
            on which event occurred' must not be greater than 'Total number of courses to date'");
        </rhs>
    </rule>

    <!-- ==========================================================================
     RuleName : PAG_BR1A_CHK
     Logic :  'Duration of Delay' must be provided when 'Dose' is 'Delayed
     Translated Logic : 'Administration delay' must be provided if 'Dose modified' is checked
     Error Code PAG_BR1A_ERR
     Error Message : DELAY must be provided if the AGENT_DELAYED is "Yes"
     ============================================================================= -->
    <rule name="PAG_BR1A_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++; if(ca.isDoseModified() &amp;&amp;
                ca.getAdministrationDelayAmount() == null ){
                errors.addValidationError("PAG_BR1A_ERR", "'Duration of Delay' must be provided when
                'Dose' is 'Delayed.",i); } } return errors.hasErrors() ? FAIL : SUCCESS; }
                }.validate(aeReport, errors)
            </eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>
    <!-- ==========================================================================
     RuleName : PAG_BR1B_CHK
     Logic :  " 'Duration of Delay' must not be provided if 'Dose' is not 'Delayed'"
     Translated Logic : 'Administration delay' must not be provided if 'Dose modified' is not checked
     Error Code PAG_BR1B_ERR
     Error Message : DELAY_UOM must not be provided if the AGENT_DELAYED is not "Yes"
     ============================================================================= -->
    <rule name="PAG_BR1B_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++; if( ca.getAdministrationDelayAmount() != null
                &amp;&amp; !ca.isDoseModified() ){ errors.addValidationError("PAG_BR1B_ERR",
                "'Duration of Delay' must not be provided when 'Dose' is not 'Delayed'.",i); } }
                return errors.hasErrors() ? FAIL : SUCCESS; } }.validate(aeReport, errors)
            </eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>

    <!-- ==========================================================================
     RuleName : PAG_BR3_CHK
     Rule : 'Date Last Administered' must be provided for an investigational agent."
     Error Code : PAG_BR3_ERR
     Error Message : LAST_ADMINISTERED_DATE must be entered for an investigational agent.
     ============================================================================= -->
    <rule name="PAG_BR3_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++;
                if(ca.getStudyAgent().getInvestigationalNewDrugIndicator() &amp;&amp;
                ca.getLastAdministeredDate() == null){ errors.addValidationError("PAG_BR3_ERR",
                "'Date Last Administered' must be provided for an investigational agent.",i); } }
                return errors.hasErrors() ? FAIL : SUCCESS; } }.validate(aeReport, errors)
            </eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>
    <!-- ==========================================================================
     RuleName : PAG_UK_CHK
     Rule : Protocol Agents must be unique"
     Error Code : PAG_UK_ERR
     Error Message : PROTOCOL_AGENT must be unique
     ============================================================================= -->
    <rule name="PAG_UK_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; HashSet hSet =
                new HashSet(); for(CourseAgent ca : ti.getCourseAgents()){ i++;
                if(!hSet.add(ca.getStudyAgent().getId())){ errors.addValidationError("PAG_UK_ERR",
                "Protocol Agents must be unique", i,ca.getStudyAgent().getAgentName() ); } } return
                errors.hasErrors() ? FAIL : SUCCESS; } }.validate(aeReport, errors)
            </eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>
    <!-- ==========================================================================
     RuleName : PAG_BR2B_CHK
     Rule : "'Unit of measure'  must be provided if 'Total dose administered this course' is provided.
     Error Code : PAG_BR2B_ERR
     Error Message : DELAY_UOM must be provided if the Total dose administered this course is provided
     ============================================================================= -->
    <rule name="PAG_BR2B_CHK">
        <lhs>
            <pattern identifier="aeReport"
                     object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                     object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++; if(ca.getDose().getAmount() != null
                &amp;&amp; StringUtils.isEmpty(ca.getDose().getUnits()) ){
                errors.addValidationError("PAG_BR2B_ERR", "'Unit of measure' must be provided if 'Total dose
                administered this course' is provided",i);
                } } return errors.hasErrors() ? FAIL : SUCCESS;
                } }.validate(aeReport, errors)
            </eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>
    <!-- ==========================================================================
	RuleName : SME_BR1_CHK
	Logic : Either 'Brand name' or 'Common name' must be provided
	Error Code : SME_BR1_ERR
	Error Message : Either BRAND_NAME or COMMON_NAME must be provided
	============================================================================= -->
    <rule name="SME_BR1_CHK">
        <lhs>
            <pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].brandName") == null
            </eval>
            <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].commonName") == null
            </eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message-->
            errors.addValidationError("SME_BR1_ERR","Either 'Brand name' or 'Common name' must be provided");
        </rhs>
    </rule>
    <!-- ==========================================================================
     RuleName : SME_BR2_CHK
     Logic : Either 'Model#', 'Serial#', 'Catalog#'  or 'Lot#' must be provided
     Error Code : SME_BR2_ERR
     Error Message : Either MODEL_NUMBER, SERIAL_NUMBER, CATALOG_NUMBER  or LOT_NUMBER must be provided.
     ============================================================================= -->
    <rule name="SME_BR2_CHK">
        <lhs>
            <pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].modelNumber") == null
            </eval>
            <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].catalogNumber") == null
            </eval>
            <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].lotNumber") == null
            </eval>
            <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].serialNumber") == null
            </eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message-->
            errors.addValidationError("SME_BR2_ERR","Either 'Model#', 'Serial#', 'Catalog#' or 'Lot#' must be
            provided");
        </rhs>
    </rule>

    <!-- ==========================================================================
     RuleName : ADO_BR1_CHK
     Logic : 'Device Operator Description' must be provided if 'Device Operator' is 'Other'
     Error Code : ADO_BR1_ERR
     Error Message : DEVICE_OPERATOR_DESCRIPTION must be provided if (and only if) DEVICE_OPERATOR is "Other"
     ============================================================================= -->
    <rule name="ADO_BR1_CHK">
        <lhs>
            <pattern identifier="aeReport" object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors" object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <or-conditional-element>
                <and-conditional-element>
                    <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                        NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].deviceOperator.displayName").equals(DeviceOperator.OTHER.getDisplayName())
                    </eval>
                    <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                        NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].otherDeviceOperator") == null
                    </eval>
                </and-conditional-element>
                <and-conditional-element>
                    <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                        !NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].deviceOperator.displayName").equals(DeviceOperator.OTHER.getDisplayName())
                    </eval>
                    <eval>!aeReport.getMedicalDevices().isEmpty() &amp;&amp;
                        NullSafeFieldExtractor.extractField(aeReport,"medicalDevices[0].otherDeviceOperator") != null
                    </eval>
                </and-conditional-element>
            </or-conditional-element>
        </lhs>
        <rhs>
            <!-- Populate Error Message-->
            errors.addValidationError("ADO_BR1_ERR","'Device Operator Description' must be provided if (and only if)
            'Device Operator' is 'Other'");
        </rhs>
    </rule>

</package>
