<?xml version="1.0" encoding="UTF-8"?>
<package  name="gov.nih.nci.cabig.caaers.rules.agents_intervention_section"  xmlns="http://drools.org/drools-4.0" xmlns:drools="http://drools.org/drools-4.0" xmlns:rules="http://drools.org/drools-4.0" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:schemaLocation="http://drools.org/drools-4.0 drools-4.0.xsd">

    <import name="gov.nih.nci.cabig.caaers.domain.*"/>
    <import name="gov.nih.nci.cabig.caaers.validation.*"/>
    <import name="java.util.List"/>
    <import name="java.util.HashSet"/>
    <import name="gov.nih.nci.cabig.caaers.rules.common.DateUtil"/>
    <import name="gov.nih.nci.cabig.caaers.rules.objectgraph.NullSafeFieldExtractor"/>
    <import name="gov.nih.nci.cabig.caaers.rules.common.NumberUtil"/>
    <import name="gov.nih.nci.cabig.caaers.rules.runtime.ExpeditedAdverseEventValidator"/>
    <import name="org.apache.commons.lang.StringUtils"/>

    <global type="gov.nih.nci.cabig.caaers.rules.runtime.RuleContext" identifier="ruleContext"/>
    <global type="gov.nih.nci.cabig.caaers.rules.runtime.action.ActionDispatcher" identifier="actionDispatcher"/>

    <!-- ===== REPORT LEVEL RULE ====================================================
    RuleName : SEC_BR5B_CHK
    Rule : Protocol agents must be not be provided if Course Information has not been provided.
    Error Code : SEC_BR5A_ERR
    Error Message : PROTOCOL_AGENTS must not be provided if COURSE_INFOMATION is not provided.
    ============================================================================= -->
    <rule name="SEC_BR5B_CHK">
        <rule-attribute name="no-loop" value="true"/>
        <lhs>
            <pattern identifier="aeReport"
                object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.firstCourseDate")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.date")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.adverseEventCourse.number")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractField(aeReport,"treatmentInformation.totalCourses")
                == null</eval>
            <eval>NullSafeFieldExtractor.extractFieldLength(aeReport,"treatmentInformation.courseAgents")
                &gt; 0</eval>
        </lhs>
        <rhs>
            <!-- Populate Error Message--> errors.addValidationError("SEC_BR5B_ERR","'Protocol
            agents' must be not be provided if 'Course Information' has not been provided"); </rhs>
    </rule>

    <!-- ==========================================================================
    RuleName : PAG_BR3_CHK
    Rule : 'Date Last Administered' must be provided for an investigational agent."
    Error Code : PAG_BR3_ERR
    Error Message : LAST_ADMINISTERED_DATE must be entered for an investigational agent.
    ============================================================================= -->
    <rule name="PAG_BR3_CHK">
        <lhs>
            <pattern identifier="aeReport"
                object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
            <pattern identifier="errors"
                object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
            <eval>new ExpeditedAdverseEventValidator(){ public boolean
                validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                ca : ti.getCourseAgents()){ i++;
                if(ca.getStudyAgent().getInvestigationalNewDrugIndicator() &amp;&amp;
                ca.getLastAdministeredDate() == null){ errors.addValidationError("PAG_BR3_ERR",
                "'Date Last Administered' must be provided for an investigational agent.",i); } }
                return errors.hasErrors() ? FAIL : SUCCESS; } }.validate(aeReport, errors)</eval>
        </lhs>
        <rhs>
            <!--  Error message is already populated -->
        </rhs>
    </rule>

    <!-- ==========================================================================
        RuleName : PAG_UK_CHK
        Rule : Protocol Agents must be unique"
        Error Code : PAG_UK_ERR
        Error Message : PROTOCOL_AGENT must be unique
        ============================================================================= -->
        <rule name="PAG_UK_CHK">
            <lhs>
                <pattern identifier="aeReport"
                    object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
                <pattern identifier="errors"
                    object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
                <eval>new ExpeditedAdverseEventValidator(){ public boolean
                    validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                    TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                    SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; HashSet hSet =
                    new HashSet(); for(CourseAgent ca : ti.getCourseAgents()){ i++;
                    if(!hSet.add(ca.getStudyAgent().getId())){ errors.addValidationError("PAG_UK_ERR",
                    "Protocol Agents must be unique", i,ca.getStudyAgent().getAgentName() ); } } return
                    errors.hasErrors() ? FAIL : SUCCESS; } }.validate(aeReport, errors)</eval>
            </lhs>
            <rhs>
                <!--  Error message is already populated -->
            </rhs>
        </rule>
        <!-- ==========================================================================
        RuleName : PAG_BR2B_CHK
        Rule : "'Unit of measure'  must be provided if 'Total dose administered this course' is provided.
        Error Code : PAG_BR2B_ERR
        Error Message : DELAY_UOM must be provided if the Total dose administered this course is provided
        ============================================================================= -->
        <rule name="PAG_BR2B_CHK">
            <lhs>
                <pattern identifier="aeReport"
                    object-type="gov.nih.nci.cabig.caaers.domain.ExpeditedAdverseEventReport"/>
                <pattern identifier="errors"
                    object-type="gov.nih.nci.cabig.caaers.validation.ValidationErrors"/>
                <eval>new ExpeditedAdverseEventValidator(){ public boolean
                    validate(ExpeditedAdverseEventReport aeReport,ValidationErrors errors) {
                    TreatmentInformation ti = aeReport.getTreatmentInformation(); if(ti == null) return
                    SUCCESS; if(ti.getCourseAgents() == null) return SUCCESS; int i = 0; for(CourseAgent
                    ca : ti.getCourseAgents()){ i++; if(ca.getDose().getAmount() != null
                    &amp;&amp; StringUtils.isEmpty(ca.getDose().getUnits()) ){
                        errors.addValidationError("PAG_BR2B_ERR", "'Unit of measure' must be provided if 'Total dose administered this course' is provided",i);
                         } } return errors.hasErrors() ? FAIL : SUCCESS;
                    } }.validate(aeReport, errors)</eval>
            </lhs>
            <rhs>
                <!--  Error message is already populated -->
            </rhs>
        </rule>

    </package>
