package gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.service.globus;

import gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.service.CreateCandidateAdverseEventServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the CreateCandidateAdverseEventServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class CreateCandidateAdverseEventServiceProviderImpl{
	
	CreateCandidateAdverseEventServiceImpl impl;
	
	public CreateCandidateAdverseEventServiceProviderImpl() throws RemoteException {
		impl = new CreateCandidateAdverseEventServiceImpl();
	}
	

	public gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.stubs.ProcessMessageResponse processMessage(gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.stubs.ProcessMessageRequest params) throws RemoteException, gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.stubs.types.CandidateAdverseEventCreationException {
		CreateCandidateAdverseEventServiceAuthorization.authorizeProcessMessage();
		gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.stubs.ProcessMessageResponse boxedResult = new gov.nih.nci.cabig.ctms.createcandidateadverseeventservice.stubs.ProcessMessageResponse();
		boxedResult.setResponse(impl.processMessage(params.getAdverseEvent().getAdverseEvent()));
		return boxedResult;
	}

}
